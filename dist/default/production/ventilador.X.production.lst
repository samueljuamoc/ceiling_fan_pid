

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jun 24 15:19:42 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4550 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     _TMR2	set	4044
    92  0000                     _TRISBbits	set	3987
    93  0000                     _PORTB	set	3969
    94  0000                     _PORTC	set	3970
    95  0000                     _TMR1L	set	4046
    96  0000                     _TMR1H	set	4047
    97  0000                     _TMR0L	set	4054
    98  0000                     _TMR0H	set	4055
    99  0000                     _RCREG	set	4014
   100  0000                     _TXREG	set	4013
   101  0000                     _TRISCbits	set	3988
   102  0000                     _PIR1bits	set	3998
   103  0000                     _TRISA	set	3986
   104  0000                     _ADCON0bits	set	4034
   105  0000                     _CREN	set	32092
   106  0000                     _OERR	set	32089
   107  0000                     _PORTA	set	3968
   108  0000                     _RCSTAbits	set	4011
   109  0000                     _TXSTAbits	set	4012
   110  0000                     _SPBRG	set	4015
   111  0000                     _PIE1bits	set	3997
   112  0000                     _CCP2CONbits	set	4026
   113  0000                     _CCPR2L	set	4027
   114  0000                     _CCP1CONbits	set	4029
   115  0000                     _CCPR1L	set	4030
   116  0000                     _ADCON2bits	set	4032
   117  0000                     _ADCON1bits	set	4033
   118  0000                     _ADRES	set	4035
   119  0000                     _T2CONbits	set	4042
   120  0000                     _PR2	set	4043
   121  0000                     _T1CONbits	set	4045
   122  0000                     _OSCCONbits	set	4051
   123  0000                     _ADCON0	set	4034
   124  0000                     _T0CONbits	set	4053
   125  0000                     _INTCONbits	set	4082
   126  0000                     _RCONbits	set	4048
   127                           
   128                           	psect	smallconst
   129  000800                     __psmallconst:
   130                           	callstack 0
   131  000800  00                 	db	0
   132  000801                     STR_1:
   133                           
   134                           ; BSR set to: 0
   135  000801  25                 	db	37
   136  000802  64                 	db	100	;'d'
   137  000803  41                 	db	65	;'A'
   138  000804  25                 	db	37
   139  000805  64                 	db	100	;'d'
   140  000806  42                 	db	66	;'B'
   141  000807  00                 	db	0
   142  000808  00                 	db	0	; dummy byte at the end
   143  0000                     
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147  0019D8                     __pcinit:
   148                           	callstack 0
   149  0019D8                     start_initialization:
   150                           	callstack 0
   151  0019D8                     __initialization:
   152                           	callstack 0
   153                           
   154                           ; Clear objects allocated to BANK0 (74 bytes)
   155  0019D8  EE00  F060         	lfsr	0,__pbssBANK0
   156  0019DC  0E4A               	movlw	74
   157  0019DE                     clear_0:
   158  0019DE  6AEE               	clrf	postinc0,c
   159  0019E0  06E8               	decf	wreg,f,c
   160  0019E2  E1FD               	bnz	clear_0
   161  0019E4                     end_of_initialization:
   162                           	callstack 0
   163  0019E4                     __end_of__initialization:
   164                           	callstack 0
   165  0019E4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   166  0019E6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   167  0019E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168  0019EA  6EF8               	movwf	tblptru,c
   169  0019EC  0100               	movlb	0
   170  0019EE  EF76  F005         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssBANK0
   173  000060                     __pbssBANK0:
   174                           	callstack 0
   175  000060                     _nout:
   176                           	callstack 0
   177  000060                     	ds	2
   178  000062                     _width:
   179                           	callstack 0
   180  000062                     	ds	2
   181  000064                     _prec:
   182                           	callstack 0
   183  000064                     	ds	2
   184  000066                     _flags:
   185                           	callstack 0
   186  000066                     	ds	2
   187  000068                     _contador:
   188                           	callstack 0
   189  000068                     	ds	2
   190  00006A                     _pwm_motor:
   191                           	callstack 0
   192  00006A                     	ds	2
   193  00006C                     _pwm_led:
   194                           	callstack 0
   195  00006C                     	ds	2
   196  00006E                     _acum:
   197                           	callstack 0
   198  00006E                     	ds	2
   199  000070                     _luz:
   200                           	callstack 0
   201  000070                     	ds	2
   202  000072                     _LDR_3:
   203                           	callstack 0
   204  000072                     	ds	2
   205  000074                     _LDR_2:
   206                           	callstack 0
   207  000074                     	ds	2
   208  000076                     _LDR_1:
   209                           	callstack 0
   210  000076                     	ds	2
   211  000078                     _LDR_0:
   212                           	callstack 0
   213  000078                     	ds	2
   214  00007A                     _change_array:
   215                           	callstack 0
   216  00007A                     	ds	1
   217  00007B                     _ch:
   218                           	callstack 0
   219  00007B                     	ds	1
   220  00007C                     _indicador:
   221                           	callstack 0
   222  00007C                     	ds	1
   223  00007D                     _INT_overflow:
   224                           	callstack 0
   225  00007D                     	ds	1
   226  00007E                     _j:
   227                           	callstack 0
   228  00007E                     	ds	1
   229  00007F                     _i:
   230                           	callstack 0
   231  00007F                     	ds	1
   232  000080                     _dbuf:
   233                           	callstack 0
   234  000080                     	ds	32
   235  0000A0                     _string_pwm_motor:
   236                           	callstack 0
   237  0000A0                     	ds	5
   238  0000A5                     _string_pwm_led:
   239                           	callstack 0
   240  0000A5                     	ds	5
   241                           
   242                           	psect	cstackBANK0
   243  0000AA                     __pcstackBANK0:
   244                           	callstack 0
   245  0000AA                     printf@ap:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x0
   249  0000AA                     	ds	2
   250  0000AC                     ??_main:
   251                           
   252                           ; 1 bytes @ 0x2
   253  0000AC                     	ds	2
   254                           
   255                           	psect	cstackCOMRAM
   256  000001                     __pcstackCOMRAM:
   257                           	callstack 0
   258  000001                     ?_TMR0_read:
   259                           	callstack 0
   260  000001                     ?_ADC_read:
   261                           	callstack 0
   262  000001                     ?_isspace:
   263                           	callstack 0
   264  000001                     ?_isdigit:
   265                           	callstack 0
   266  000001                     ?_strlen:
   267                           	callstack 0
   268  000001                     ?___wmul:
   269                           	callstack 0
   270  000001                     ?___aldiv:
   271                           	callstack 0
   272  000001                     ?___aodiv:
   273                           	callstack 0
   274  000001                     ?___aomod:
   275                           	callstack 0
   276  000001                     putch@data:
   277                           	callstack 0
   278  000001                     serial_read@s_pwm_led:
   279                           	callstack 0
   280  000001                     pwm1_send@valor:
   281                           	callstack 0
   282  000001                     pwm2_send@valor:
   283                           	callstack 0
   284  000001                     ___wmul@multiplier:
   285                           	callstack 0
   286  000001                     isdigit@c:
   287                           	callstack 0
   288  000001                     isspace@c:
   289                           	callstack 0
   290  000001                     strlen@s:
   291                           	callstack 0
   292  000001                     ___aldiv@dividend:
   293                           	callstack 0
   294  000001                     ___aodiv@dividend:
   295                           	callstack 0
   296  000001                     ___aomod@dividend:
   297                           	callstack 0
   298                           
   299                           ; 8 bytes @ 0x0
   300  000001                     	ds	1
   301  000002                     fputc@c:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x1
   305  000002                     	ds	1
   306  000003                     ??_TMR0_read:
   307  000003                     ??_ADC_read:
   308  000003                     ??_pwm1_send:
   309  000003                     ??_pwm2_send:
   310  000003                     ??_isspace:
   311  000003                     ??_isdigit:
   312  000003                     serial_read@s_pwm_motor:
   313                           	callstack 0
   314  000003                     ___wmul@multiplicand:
   315                           	callstack 0
   316  000003                     strlen@a:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x2
   320  000003                     	ds	1
   321  000004                     ADC_read@canal:
   322                           	callstack 0
   323  000004                     fputc@fp:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x3
   327  000004                     	ds	1
   328  000005                     ??_serial_read:
   329  000005                     ___wmul@product:
   330                           	callstack 0
   331  000005                     ___aldiv@divisor:
   332                           	callstack 0
   333                           
   334                           ; 4 bytes @ 0x4
   335  000005                     	ds	1
   336  000006                     ??_fputc:
   337                           
   338                           ; 1 bytes @ 0x5
   339  000006                     	ds	1
   340  000007                     _isspace$1553:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x6
   344  000007                     	ds	1
   345  000008                     ?_atoi:
   346                           	callstack 0
   347  000008                     atoi@s:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x7
   351  000008                     	ds	1
   352  000009                     ___aldiv@counter:
   353                           	callstack 0
   354  000009                     ___aodiv@divisor:
   355                           	callstack 0
   356  000009                     ___aomod@divisor:
   357                           	callstack 0
   358                           
   359                           ; 8 bytes @ 0x8
   360  000009                     	ds	1
   361  00000A                     ??_atoi:
   362  00000A                     ___aldiv@sign:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x9
   366  00000A                     	ds	1
   367  00000B                     fputs@s:
   368                           	callstack 0
   369  00000B                     ___aldiv@quotient:
   370                           	callstack 0
   371                           
   372                           ; 4 bytes @ 0xA
   373  00000B                     	ds	2
   374  00000D                     fputs@fp:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0xC
   378  00000D                     	ds	1
   379  00000E                     atoi@neg:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0xD
   383  00000E                     	ds	1
   384  00000F                     fputs@c:
   385                           	callstack 0
   386  00000F                     USART_init@BAUD:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0xE
   390  00000F                     	ds	1
   391  000010                     atoi@n:
   392                           	callstack 0
   393  000010                     fputs@i:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0xF
   397  000010                     	ds	1
   398  000011                     ___aodiv@counter:
   399                           	callstack 0
   400  000011                     ___aomod@counter:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x10
   404  000011                     	ds	1
   405  000012                     ?_pad:
   406                           	callstack 0
   407  000012                     ___aodiv@sign:
   408                           	callstack 0
   409  000012                     ___aomod@sign:
   410                           	callstack 0
   411  000012                     pad@fp:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x11
   415  000012                     	ds	1
   416  000013                     ?_abs:
   417                           	callstack 0
   418  000013                     abs@a:
   419                           	callstack 0
   420  000013                     _USART_init$1881:
   421                           	callstack 0
   422  000013                     ___aodiv@quotient:
   423                           	callstack 0
   424                           
   425                           ; 8 bytes @ 0x12
   426  000013                     	ds	1
   427  000014                     pad@buf:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x13
   431  000014                     	ds	1
   432  000015                     ??_abs:
   433                           
   434                           ; 1 bytes @ 0x14
   435  000015                     	ds	1
   436  000016                     pad@p:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x15
   440  000016                     	ds	2
   441  000018                     ??_pad:
   442                           
   443                           ; 1 bytes @ 0x17
   444  000018                     	ds	1
   445  000019                     pad@i:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x18
   449  000019                     	ds	2
   450  00001B                     pad@w:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x1A
   454  00001B                     	ds	2
   455  00001D                     ?_dtoa:
   456                           	callstack 0
   457  00001D                     dtoa@fp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x1C
   461  00001D                     	ds	2
   462  00001F                     dtoa@d:
   463                           	callstack 0
   464                           
   465                           ; 8 bytes @ 0x1E
   466  00001F                     	ds	8
   467  000027                     ??_dtoa:
   468                           
   469                           ; 1 bytes @ 0x26
   470  000027                     	ds	8
   471  00002F                     _dtoa$1630:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x2E
   475  00002F                     	ds	2
   476  000031                     dtoa@p:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x30
   480  000031                     	ds	2
   481  000033                     dtoa@w:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x32
   485  000033                     	ds	2
   486  000035                     dtoa@s:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x34
   490  000035                     	ds	2
   491  000037                     dtoa@n:
   492                           	callstack 0
   493                           
   494                           ; 8 bytes @ 0x36
   495  000037                     	ds	8
   496  00003F                     dtoa@i:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x3E
   500  00003F                     	ds	2
   501  000041                     ?_vfpfcnvrt:
   502                           	callstack 0
   503  000041                     vfpfcnvrt@fp:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x40
   507  000041                     	ds	2
   508  000043                     vfpfcnvrt@fmt:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x42
   512  000043                     	ds	2
   513  000045                     vfpfcnvrt@ap:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x44
   517  000045                     	ds	2
   518  000047                     ??_vfpfcnvrt:
   519                           
   520                           ; 1 bytes @ 0x46
   521  000047                     	ds	2
   522  000049                     vfpfcnvrt@ll:
   523                           	callstack 0
   524                           
   525                           ; 8 bytes @ 0x48
   526  000049                     	ds	8
   527  000051                     ?_vfprintf:
   528                           	callstack 0
   529  000051                     vfprintf@fp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x50
   533  000051                     	ds	2
   534  000053                     vfprintf@fmt:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x52
   538  000053                     	ds	2
   539  000055                     vfprintf@ap:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x54
   543  000055                     	ds	2
   544  000057                     vfprintf@cfmt:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x56
   548  000057                     	ds	2
   549  000059                     ?_printf:
   550                           	callstack 0
   551  000059                     printf@fmt:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x58
   555  000059                     	ds	6
   556  00005F                     
   557                           ; 1 bytes @ 0x5E
   558 ;;
   559 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   560 ;;
   561 ;; *************** function _main *****************
   562 ;; Defined at:
   563 ;;		line 24 in file "main.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   577 ;;      Params:         0       0       0       0       0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0       0       0
   579 ;;      Temps:          0       2       0       0       0       0       0       0       0
   580 ;;      Totals:         0       2       0       0       0       0       0       0       0
   581 ;;Total ram usage:        2 bytes
   582 ;; Hardware stack levels required when called: 9
   583 ;; This function calls:
   584 ;;		_ADC_init
   585 ;;		_ADC_read
   586 ;;		_TMR0_disable
   587 ;;		_TMR0_enable
   588 ;;		_TMR0_init
   589 ;;		_TMR0_read
   590 ;;		_TMR0_reset
   591 ;;		_TMR1_init
   592 ;;		_TMR1_int_disable
   593 ;;		_TMR1_int_enable
   594 ;;		_TMR1_int_init
   595 ;;		_TMR1_set
   596 ;;		_TMR1_stop
   597 ;;		_USART_init
   598 ;;		_atoi
   599 ;;		_intosc_init
   600 ;;		_printf
   601 ;;		_pwm1_send
   602 ;;		_pwm2_send
   603 ;;		_pwm_set
   604 ;;		_serial_read
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text0
   611  000AEC                     __ptext0:
   612                           	callstack 0
   613  000AEC                     _main:
   614                           	callstack 22
   615  000AEC                     
   616                           ;main.c: 26:     intosc_init();
   617  000AEC  EC29  F00D         	call	_intosc_init	;wreg free
   618  000AF0                     
   619                           ;main.c: 27:     _delay((unsigned long)((200)*(8000000L/4000.0)));
   620  000AF0  0E03               	movlw	3
   621  000AF2  0100               	movlb	0	; () banked
   622  000AF4  6FAD               	movwf	(??_main+1)& (0+255),b
   623  000AF6  0E08               	movlw	8
   624  000AF8  6FAC               	movwf	??_main& (0+255),b
   625  000AFA  0E77               	movlw	119
   626  000AFC                     u1417:
   627  000AFC  2EE8               	decfsz	wreg,f,c
   628  000AFE  D7FE               	bra	u1417
   629  000B00  2FAC               	decfsz	??_main& (0+255),f,b
   630  000B02  D7FC               	bra	u1417
   631  000B04  2FAD               	decfsz	(??_main+1)& (0+255),f,b
   632  000B06  D7FA               	bra	u1417
   633  000B08                     
   634                           ;main.c: 28:     USART_init(9600);
   635  000B08  0E80               	movlw	128
   636  000B0A  6E0F               	movwf	USART_init@BAUD^0,c
   637  000B0C  0E25               	movlw	37
   638  000B0E  6E10               	movwf	(USART_init@BAUD+1)^0,c
   639  000B10  0E00               	movlw	0
   640  000B12  6E11               	movwf	(USART_init@BAUD+2)^0,c
   641  000B14  0E00               	movlw	0
   642  000B16  6E12               	movwf	(USART_init@BAUD+3)^0,c
   643  000B18  EC19  F00B         	call	_USART_init	;wreg free
   644  000B1C                     
   645                           ;main.c: 29:     _delay((unsigned long)((200)*(8000000L/4000.0)));
   646  000B1C  0E03               	movlw	3
   647  000B1E  0100               	movlb	0	; () banked
   648  000B20  6FAD               	movwf	(??_main+1)& (0+255),b
   649  000B22  0E08               	movlw	8
   650  000B24  6FAC               	movwf	??_main& (0+255),b
   651  000B26  0E77               	movlw	119
   652  000B28                     u1427:
   653  000B28  2EE8               	decfsz	wreg,f,c
   654  000B2A  D7FE               	bra	u1427
   655  000B2C  2FAC               	decfsz	??_main& (0+255),f,b
   656  000B2E  D7FC               	bra	u1427
   657  000B30  2FAD               	decfsz	(??_main+1)& (0+255),f,b
   658  000B32  D7FA               	bra	u1427
   659  000B34                     
   660                           ;main.c: 30:     PORTA = 0b00000000;
   661  000B34  0E00               	movlw	0
   662  000B36  6E80               	movwf	128,c	;volatile
   663  000B38                     
   664                           ;main.c: 31:     TRISA = 0b11111111;
   665  000B38  6892               	setf	146,c	;volatile
   666  000B3A                     
   667                           ;main.c: 32:     ADC_init();
   668  000B3A  ECDA  F00C         	call	_ADC_init	;wreg free
   669  000B3E                     
   670                           ;main.c: 33:     _delay((unsigned long)((200)*(8000000L/4000.0)));
   671  000B3E  0E03               	movlw	3
   672  000B40  0100               	movlb	0	; () banked
   673  000B42  6FAD               	movwf	(??_main+1)& (0+255),b
   674  000B44  0E08               	movlw	8
   675  000B46  6FAC               	movwf	??_main& (0+255),b
   676  000B48  0E77               	movlw	119
   677  000B4A                     u1437:
   678  000B4A  2EE8               	decfsz	wreg,f,c
   679  000B4C  D7FE               	bra	u1437
   680  000B4E  2FAC               	decfsz	??_main& (0+255),f,b
   681  000B50  D7FC               	bra	u1437
   682  000B52  2FAD               	decfsz	(??_main+1)& (0+255),f,b
   683  000B54  D7FA               	bra	u1437
   684  000B56                     
   685                           ;main.c: 34:     TMR0_init();
   686  000B56  EC10  F00D         	call	_TMR0_init	;wreg free
   687  000B5A                     
   688                           ;main.c: 35:     TMR1_init();
   689  000B5A  EC1A  F00D         	call	_TMR1_init	;wreg free
   690  000B5E                     
   691                           ;main.c: 36:     TMR1_int_init();
   692  000B5E  EC3B  F00D         	call	_TMR1_int_init	;wreg free
   693  000B62                     
   694                           ;main.c: 37:     _delay((unsigned long)((200)*(8000000L/4000.0)));
   695  000B62  0E03               	movlw	3
   696  000B64  0100               	movlb	0	; () banked
   697  000B66  6FAD               	movwf	(??_main+1)& (0+255),b
   698  000B68  0E08               	movlw	8
   699  000B6A  6FAC               	movwf	??_main& (0+255),b
   700  000B6C  0E77               	movlw	119
   701  000B6E                     u1447:
   702  000B6E  2EE8               	decfsz	wreg,f,c
   703  000B70  D7FE               	bra	u1447
   704  000B72  2FAC               	decfsz	??_main& (0+255),f,b
   705  000B74  D7FC               	bra	u1447
   706  000B76  2FAD               	decfsz	(??_main+1)& (0+255),f,b
   707  000B78  D7FA               	bra	u1447
   708  000B7A                     
   709                           ;main.c: 38:     pwm_set();
   710  000B7A  EC31  F00C         	call	_pwm_set	;wreg free
   711  000B7E                     
   712                           ;main.c: 39:     _delay((unsigned long)((200)*(8000000L/4000.0)));
   713  000B7E  0E03               	movlw	3
   714  000B80  0100               	movlb	0	; () banked
   715  000B82  6FAD               	movwf	(??_main+1)& (0+255),b
   716  000B84  0E08               	movlw	8
   717  000B86  6FAC               	movwf	??_main& (0+255),b
   718  000B88  0E77               	movlw	119
   719  000B8A                     u1457:
   720  000B8A  2EE8               	decfsz	wreg,f,c
   721  000B8C  D7FE               	bra	u1457
   722  000B8E  2FAC               	decfsz	??_main& (0+255),f,b
   723  000B90  D7FC               	bra	u1457
   724  000B92  2FAD               	decfsz	(??_main+1)& (0+255),f,b
   725  000B94  D7FA               	bra	u1457
   726  000B96                     l2240:
   727                           
   728                           ;main.c: 44:         TMR1_int_enable();
   729  000B96  EC46  F00D         	call	_TMR1_int_enable	;wreg free
   730  000B9A                     
   731                           ;main.c: 45:         TMR0_enable();
   732  000B9A  EC4A  F00D         	call	_TMR0_enable	;wreg free
   733  000B9E                     
   734                           ;main.c: 46:         TMR0_reset();
   735  000B9E  EC41  F00D         	call	_TMR0_reset	;wreg free
   736  000BA2                     
   737                           ;main.c: 48:         for(i=0;i<3;i++){
   738  000BA2  0E00               	movlw	0
   739  000BA4  0100               	movlb	0	; () banked
   740  000BA6  6F7F               	movwf	_i& (0+255),b
   741  000BA8                     l2252:
   742                           
   743                           ; BSR set to: 0
   744                           ;main.c: 49:             TMR1_set();
   745  000BA8  EC35  F00D         	call	_TMR1_set	;wreg free
   746  000BAC                     l2254:
   747                           
   748                           ;main.c: 50:             while(INT_overflow == 0)
   749  000BAC  0100               	movlb	0	; () banked
   750  000BAE  517D               	movf	_INT_overflow& (0+255),w,b
   751  000BB0  B4D8               	btfsc	status,2,c
   752  000BB2  EFDD  F005         	goto	u1361
   753  000BB6  EFDF  F005         	goto	u1360
   754  000BBA                     u1361:
   755  000BBA  EFD6  F005         	goto	l2254
   756  000BBE                     u1360:
   757  000BBE                     
   758                           ; BSR set to: 0
   759                           ;main.c: 52:             INT_overflow = 0;
   760  000BBE  0E00               	movlw	0
   761  000BC0  6F7D               	movwf	_INT_overflow& (0+255),b
   762  000BC2                     
   763                           ; BSR set to: 0
   764                           ;main.c: 53:             TMR1_stop();
   765  000BC2  EC2F  F00D         	call	_TMR1_stop	;wreg free
   766  000BC6                     
   767                           ;main.c: 54:         }
   768  000BC6  0100               	movlb	0	; () banked
   769  000BC8  2B7F               	incf	_i& (0+255),f,b
   770  000BCA                     
   771                           ; BSR set to: 0
   772  000BCA  0E02               	movlw	2
   773  000BCC  657F               	cpfsgt	_i& (0+255),b
   774  000BCE  EFEB  F005         	goto	u1371
   775  000BD2  EFED  F005         	goto	u1370
   776  000BD6                     u1371:
   777  000BD6  EFD4  F005         	goto	l2252
   778  000BDA                     u1370:
   779  000BDA                     
   780                           ; BSR set to: 0
   781                           ;main.c: 56:         acum = TMR0_read();
   782  000BDA  ECF9  F00C         	call	_TMR0_read	;wreg free
   783  000BDE  C001  F06E         	movff	?_TMR0_read,_acum
   784  000BE2  C002  F06F         	movff	?_TMR0_read+1,_acum+1
   785  000BE6                     
   786                           ;main.c: 57:         TMR0_disable();
   787  000BE6  EC4C  F00D         	call	_TMR0_disable	;wreg free
   788  000BEA                     
   789                           ;main.c: 58:         TMR1_int_disable();
   790  000BEA  EC48  F00D         	call	_TMR1_int_disable	;wreg free
   791  000BEE                     
   792                           ;main.c: 61:         LDR_0 = ADC_read(0);
   793  000BEE  0E00               	movlw	0
   794  000BF0  EC86  F00C         	call	_ADC_read
   795  000BF4  C001  F078         	movff	?_ADC_read,_LDR_0
   796  000BF8  C002  F079         	movff	?_ADC_read+1,_LDR_0+1
   797  000BFC                     
   798                           ;main.c: 62:         LDR_1 = ADC_read(1);
   799  000BFC  0E01               	movlw	1
   800  000BFE  EC86  F00C         	call	_ADC_read
   801  000C02  C001  F076         	movff	?_ADC_read,_LDR_1
   802  000C06  C002  F077         	movff	?_ADC_read+1,_LDR_1+1
   803  000C0A                     
   804                           ;main.c: 63:         LDR_2 = ADC_read(2);
   805  000C0A  0E02               	movlw	2
   806  000C0C  EC86  F00C         	call	_ADC_read
   807  000C10  C001  F074         	movff	?_ADC_read,_LDR_2
   808  000C14  C002  F075         	movff	?_ADC_read+1,_LDR_2+1
   809  000C18                     
   810                           ;main.c: 64:         LDR_3 = ADC_read(3);
   811  000C18  0E03               	movlw	3
   812  000C1A  EC86  F00C         	call	_ADC_read
   813  000C1E  C001  F072         	movff	?_ADC_read,_LDR_3
   814  000C22  C002  F073         	movff	?_ADC_read+1,_LDR_3+1
   815  000C26                     
   816                           ;main.c: 66:         luz = (LDR_0+LDR_1+LDR_2+LDR_3)/4;
   817  000C26  0100               	movlb	0	; () banked
   818  000C28  5176               	movf	_LDR_1& (0+255),w,b
   819  000C2A  2578               	addwf	_LDR_0& (0+255),w,b
   820  000C2C  6FAC               	movwf	??_main& (0+255),b
   821  000C2E  5177               	movf	(_LDR_1+1)& (0+255),w,b
   822  000C30  2179               	addwfc	(_LDR_0+1)& (0+255),w,b
   823  000C32  6FAD               	movwf	(??_main+1)& (0+255),b
   824  000C34  5174               	movf	_LDR_2& (0+255),w,b
   825  000C36  27AC               	addwf	??_main& (0+255),f,b
   826  000C38  5175               	movf	(_LDR_2+1)& (0+255),w,b
   827  000C3A  23AD               	addwfc	(??_main+1)& (0+255),f,b
   828  000C3C  5172               	movf	_LDR_3& (0+255),w,b
   829  000C3E  27AC               	addwf	??_main& (0+255),f,b
   830  000C40  5173               	movf	(_LDR_3+1)& (0+255),w,b
   831  000C42  23AD               	addwfc	(??_main+1)& (0+255),f,b
   832  000C44  90D8               	bcf	status,0,c
   833  000C46  33AD               	rrcf	(??_main+1)& (0+255),f,b
   834  000C48  33AC               	rrcf	??_main& (0+255),f,b
   835  000C4A  90D8               	bcf	status,0,c
   836  000C4C  33AD               	rrcf	(??_main+1)& (0+255),f,b
   837  000C4E  33AC               	rrcf	??_main& (0+255),f,b
   838  000C50  C0AC  F070         	movff	??_main,_luz
   839  000C54  C0AD  F071         	movff	??_main+1,_luz+1
   840  000C58                     
   841                           ; BSR set to: 0
   842                           ;main.c: 69:         printf("%dA%dB",acum,luz);
   843  000C58  0E01               	movlw	low STR_1
   844  000C5A  6E59               	movwf	printf@fmt^0,c
   845  000C5C  0E08               	movlw	high STR_1
   846  000C5E  6E5A               	movwf	(printf@fmt+1)^0,c
   847  000C60  C06E  F05B         	movff	_acum,?_printf+2
   848  000C64  C06F  F05C         	movff	_acum+1,?_printf+3
   849  000C68  C070  F05D         	movff	_luz,?_printf+4
   850  000C6C  C071  F05E         	movff	_luz+1,?_printf+5
   851  000C70  ECA1  F00C         	call	_printf	;wreg free
   852  000C74                     
   853                           ;main.c: 74:         for(j=0;j<4;j++){
   854  000C74  0E00               	movlw	0
   855  000C76  0100               	movlb	0	; () banked
   856  000C78  6F7E               	movwf	_j& (0+255),b
   857  000C7A                     l2284:
   858                           
   859                           ; BSR set to: 0
   860  000C7A  0E03               	movlw	3
   861  000C7C  657E               	cpfsgt	_j& (0+255),b
   862  000C7E  EF43  F006         	goto	u1381
   863  000C82  EF45  F006         	goto	u1380
   864  000C86                     u1381:
   865  000C86  EF47  F006         	goto	l2288
   866  000C8A                     u1380:
   867  000C8A  EF5A  F006         	goto	l2294
   868  000C8E                     l2288:
   869                           
   870                           ; BSR set to: 0
   871                           ;main.c: 75:             string_pwm_led[j] = ' ';
   872  000C8E  0EA5               	movlw	low _string_pwm_led
   873  000C90  257E               	addwf	_j& (0+255),w,b
   874  000C92  6ED9               	movwf	fsr2l,c
   875  000C94  6ADA               	clrf	fsr2h,c
   876  000C96  0E00               	movlw	high _string_pwm_led
   877  000C98  22DA               	addwfc	fsr2h,f,c
   878  000C9A  0E20               	movlw	32
   879  000C9C  6EDF               	movwf	indf2,c
   880                           
   881                           ;main.c: 76:             string_pwm_motor[j] = ' ';
   882  000C9E  0EA0               	movlw	low _string_pwm_motor
   883  000CA0  257E               	addwf	_j& (0+255),w,b
   884  000CA2  6ED9               	movwf	fsr2l,c
   885  000CA4  6ADA               	clrf	fsr2h,c
   886  000CA6  0E00               	movlw	high _string_pwm_motor
   887  000CA8  22DA               	addwfc	fsr2h,f,c
   888  000CAA  0E20               	movlw	32
   889  000CAC  6EDF               	movwf	indf2,c
   890  000CAE                     
   891                           ; BSR set to: 0
   892                           ;main.c: 77:         }
   893  000CAE  2B7E               	incf	_j& (0+255),f,b
   894  000CB0  EF3D  F006         	goto	l2284
   895  000CB4                     l2294:
   896                           
   897                           ; BSR set to: 0
   898                           ;main.c: 78:         string_pwm_led[4] = '\0';
   899  000CB4  0E00               	movlw	0
   900  000CB6  6FA9               	movwf	(_string_pwm_led+4)& (0+255),b
   901                           
   902                           ;main.c: 79:         string_pwm_motor[4] = '\0';
   903  000CB8  0E00               	movlw	0
   904  000CBA  6FA4               	movwf	(_string_pwm_motor+4)& (0+255),b
   905  000CBC                     l2296:
   906                           
   907                           ;main.c: 81:         while(!serial_read(string_pwm_led,string_pwm_motor))
   908  000CBC  0EA5               	movlw	low _string_pwm_led
   909  000CBE  6E01               	movwf	serial_read@s_pwm_led^0,c
   910  000CC0  0E00               	movlw	high _string_pwm_led
   911  000CC2  6E02               	movwf	(serial_read@s_pwm_led+1)^0,c
   912  000CC4  0EA0               	movlw	low _string_pwm_motor
   913  000CC6  6E03               	movwf	serial_read@s_pwm_motor^0,c
   914  000CC8  0E00               	movlw	high _string_pwm_motor
   915  000CCA  6E04               	movwf	(serial_read@s_pwm_motor+1)^0,c
   916  000CCC  EC74  F00A         	call	_serial_read	;wreg free
   917  000CD0  A0D8               	btfss	status,0,c
   918  000CD2  EF6D  F006         	goto	u1391
   919  000CD6  EF6F  F006         	goto	u1390
   920  000CDA                     u1391:
   921  000CDA  EF5E  F006         	goto	l2296
   922  000CDE                     u1390:
   923  000CDE                     
   924                           ;main.c: 85:         pwm_led = (uint16_t)atoi((const char *)string_pwm_led);
   925  000CDE  0EA5               	movlw	low _string_pwm_led
   926  000CE0  6E08               	movwf	atoi@s^0,c
   927  000CE2  0E00               	movlw	high _string_pwm_led
   928  000CE4  6E09               	movwf	(atoi@s+1)^0,c
   929  000CE6  ECE3  F008         	call	_atoi	;wreg free
   930  000CEA  C008  F06C         	movff	?_atoi,_pwm_led
   931  000CEE  C009  F06D         	movff	?_atoi+1,_pwm_led+1
   932                           
   933                           ;main.c: 86:         pwm_motor = (uint16_t)atoi((const char *)string_pwm_motor);
   934  000CF2  0EA0               	movlw	low _string_pwm_motor
   935  000CF4  6E08               	movwf	atoi@s^0,c
   936  000CF6  0E00               	movlw	high _string_pwm_motor
   937  000CF8  6E09               	movwf	(atoi@s+1)^0,c
   938  000CFA  ECE3  F008         	call	_atoi	;wreg free
   939  000CFE  C008  F06A         	movff	?_atoi,_pwm_motor
   940  000D02  C009  F06B         	movff	?_atoi+1,_pwm_motor+1
   941  000D06                     
   942                           ;main.c: 89:         pwm1_send(pwm_led);
   943  000D06  C06C  F001         	movff	_pwm_led,pwm1_send@valor
   944  000D0A  C06D  F002         	movff	_pwm_led+1,pwm1_send@valor+1
   945  000D0E  ECCD  F00B         	call	_pwm1_send	;wreg free
   946  000D12                     
   947                           ;main.c: 90:         pwm2_send(pwm_motor);
   948  000D12  C06A  F001         	movff	_pwm_motor,pwm2_send@valor
   949  000D16  C06B  F002         	movff	_pwm_motor+1,pwm2_send@valor+1
   950  000D1A  ECAB  F00B         	call	_pwm2_send	;wreg free
   951  000D1E  EFCB  F005         	goto	l2240
   952  000D22  EF07  F000         	goto	start
   953  000D26                     __end_of_main:
   954                           	callstack 0
   955                           
   956 ;; *************** function _serial_read *****************
   957 ;; Defined at:
   958 ;;		line 94 in file "main.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  s_pwm_led       2    0[COMRAM] PTR unsigned char 
   961 ;;		 -> string_pwm_led(5), 
   962 ;;  s_pwm_motor     2    2[COMRAM] PTR unsigned char 
   963 ;;		 -> string_pwm_motor(5), 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;		None               void
   968 ;; Registers used:
   969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   975 ;;      Params:         4       0       0       0       0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0
   977 ;;      Temps:          2       0       0       0       0       0       0       0       0
   978 ;;      Totals:         6       0       0       0       0       0       0       0       0
   979 ;;Total ram usage:        6 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 2
   982 ;; This function calls:
   983 ;;		_getch
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text1
   990  0014E8                     __ptext1:
   991                           	callstack 0
   992  0014E8                     _serial_read:
   993                           	callstack 28
   994  0014E8                     
   995                           ;main.c: 96:     ch = getch();
   996  0014E8  ECC8  F00C         	call	_getch	;wreg free
   997  0014EC  0100               	movlb	0	; () banked
   998  0014EE  6F7B               	movwf	_ch& (0+255),b
   999  0014F0                     
  1000                           ; BSR set to: 0
  1001                           ;main.c: 98:     if (ch == '$'){
  1002  0014F0  0E24               	movlw	36
  1003  0014F2  197B               	xorwf	_ch& (0+255),w,b
  1004  0014F4  A4D8               	btfss	status,2,c
  1005  0014F6  EF7F  F00A         	goto	u1291
  1006  0014FA  EF81  F00A         	goto	u1290
  1007  0014FE                     u1291:
  1008  0014FE  EFCC  F00A         	goto	l2168
  1009  001502                     u1290:
  1010  001502                     
  1011                           ; BSR set to: 0
  1012                           ;main.c: 100:         change_array = 0;
  1013  001502  0E00               	movlw	0
  1014  001504  6F7A               	movwf	_change_array& (0+255),b
  1015                           
  1016                           ;main.c: 101:         while(change_array < 3){
  1017  001506  EFC1  F00A         	goto	l2162
  1018  00150A                     l2142:
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;main.c: 103:             ch = getch();
  1022  00150A  ECC8  F00C         	call	_getch	;wreg free
  1023  00150E  0100               	movlb	0	; () banked
  1024  001510  6F7B               	movwf	_ch& (0+255),b
  1025  001512                     
  1026                           ; BSR set to: 0
  1027                           ;main.c: 105:             if(ch == ','){
  1028  001512  0E2C               	movlw	44
  1029  001514  197B               	xorwf	_ch& (0+255),w,b
  1030  001516  A4D8               	btfss	status,2,c
  1031  001518  EF90  F00A         	goto	u1301
  1032  00151C  EF92  F00A         	goto	u1300
  1033  001520                     u1301:
  1034  001520  EFAC  F00A         	goto	l2160
  1035  001524                     u1300:
  1036  001524                     
  1037                           ; BSR set to: 0
  1038                           ;main.c: 106:                 change_array++;
  1039  001524  2B7A               	incf	_change_array& (0+255),f,b
  1040  001526                     
  1041                           ; BSR set to: 0
  1042                           ;main.c: 107:                 j=0;
  1043  001526  0E00               	movlw	0
  1044  001528  6F7E               	movwf	_j& (0+255),b
  1045                           
  1046                           ;main.c: 108:             }
  1047  00152A  EFC1  F00A         	goto	l2162
  1048  00152E                     l2150:
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;main.c: 112:                         s_pwm_led[j++] = ch;
  1052  00152E  517E               	movf	_j& (0+255),w,b
  1053  001530  2401               	addwf	serial_read@s_pwm_led^0,w,c
  1054  001532  6ED9               	movwf	fsr2l,c
  1055  001534  0E00               	movlw	0
  1056  001536  2002               	addwfc	(serial_read@s_pwm_led+1)^0,w,c
  1057  001538  6EDA               	movwf	fsr2h,c
  1058  00153A  C07B  FFDF         	movff	_ch,indf2
  1059  00153E                     l2152:
  1060                           
  1061                           ; BSR set to: 0
  1062  00153E  2B7E               	incf	_j& (0+255),f,b
  1063                           
  1064                           ;main.c: 113:                     break;
  1065  001540  EFC1  F00A         	goto	l2162
  1066  001544                     l2154:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;main.c: 115:                         s_pwm_motor[j++] = ch;
  1070  001544  517E               	movf	_j& (0+255),w,b
  1071  001546  2403               	addwf	serial_read@s_pwm_motor^0,w,c
  1072  001548  6ED9               	movwf	fsr2l,c
  1073  00154A  0E00               	movlw	0
  1074  00154C  2004               	addwfc	(serial_read@s_pwm_motor+1)^0,w,c
  1075  00154E  6EDA               	movwf	fsr2h,c
  1076  001550  C07B  FFDF         	movff	_ch,indf2
  1077  001554  EF9F  F00A         	goto	l2152
  1078  001558                     l2160:
  1079                           
  1080                           ; BSR set to: 0
  1081  001558  517A               	movf	_change_array& (0+255),w,b
  1082  00155A  6E05               	movwf	??_serial_read^0,c
  1083  00155C  6A06               	clrf	(??_serial_read+1)^0,c
  1084                           
  1085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1086                           ; Switch size 1, requested type "simple"
  1087                           ; Number of cases is 1, Range of values is 0 to 0
  1088                           ; switch strategies available:
  1089                           ; Name         Instructions Cycles
  1090                           ; simple_byte            4     3 (average)
  1091                           ;	Chosen strategy is simple_byte
  1092  00155E  5006               	movf	(??_serial_read+1)^0,w,c
  1093  001560  0A00               	xorlw	0	; case 0
  1094  001562  B4D8               	btfsc	status,2,c
  1095  001564  EFB6  F00A         	goto	l2356
  1096  001568  EFC1  F00A         	goto	l109
  1097  00156C                     l2356:
  1098                           
  1099                           ; BSR set to: 0
  1100                           ; Switch size 1, requested type "simple"
  1101                           ; Number of cases is 2, Range of values is 1 to 2
  1102                           ; switch strategies available:
  1103                           ; Name         Instructions Cycles
  1104                           ; simple_byte            7     4 (average)
  1105                           ;	Chosen strategy is simple_byte
  1106  00156C  5005               	movf	??_serial_read^0,w,c
  1107  00156E  0A01               	xorlw	1	; case 1
  1108  001570  B4D8               	btfsc	status,2,c
  1109  001572  EF97  F00A         	goto	l2150
  1110  001576  0A03               	xorlw	3	; case 2
  1111  001578  B4D8               	btfsc	status,2,c
  1112  00157A  EFA2  F00A         	goto	l2154
  1113  00157E  EFC1  F00A         	goto	l109
  1114  001582                     l109:
  1115  001582                     l2162:
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;main.c: 101:         while(change_array < 3){
  1119  001582  0E02               	movlw	2
  1120  001584  657A               	cpfsgt	_change_array& (0+255),b
  1121  001586  EFC7  F00A         	goto	u1311
  1122  00158A  EFC9  F00A         	goto	u1310
  1123  00158E                     u1311:
  1124  00158E  EF85  F00A         	goto	l2142
  1125  001592                     u1310:
  1126  001592                     
  1127                           ; BSR set to: 0
  1128                           ;main.c: 123:         return 1;
  1129  001592  80D8               	bsf	status,0,c
  1130  001594  EFCD  F00A         	goto	l116
  1131  001598                     l2168:
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;main.c: 126:     return 0;
  1135  001598  90D8               	bcf	status,0,c
  1136  00159A                     l116:
  1137                           
  1138                           ; BSR set to: 0
  1139  00159A  0012               	return		;funcret
  1140  00159C                     __end_of_serial_read:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _getch *****************
  1144 ;; Defined at:
  1145 ;;		line 29 in file "usart_lib.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      unsigned char 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1159 ;;      Params:         0       0       0       0       0       0       0       0       0
  1160 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1162 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1163 ;;Total ram usage:        0 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; Hardware stack levels required when called: 1
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_serial_read
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text2
  1174  001990                     __ptext2:
  1175                           	callstack 0
  1176  001990                     _getch:
  1177                           	callstack 28
  1178  001990                     l151:
  1179                           
  1180                           ;usart_lib.c: 30:     while (!PIR1bits.RCIF)
  1181  001990  AA9E               	btfss	158,5,c	;volatile
  1182  001992  EFCD  F00C         	goto	u1151
  1183  001996  EFCF  F00C         	goto	u1150
  1184  00199A                     u1151:
  1185  00199A  EFC8  F00C         	goto	l151
  1186  00199E                     u1150:
  1187  00199E                     
  1188                           ;usart_lib.c: 33:     if (OERR)
  1189  00199E  A2AB               	btfss	4011,1,c	;volatile
  1190  0019A0  EFD4  F00C         	goto	u1161
  1191  0019A4  EFD6  F00C         	goto	u1160
  1192  0019A8                     u1161:
  1193  0019A8  EFD8  F00C         	goto	l1962
  1194  0019AC                     u1160:
  1195  0019AC                     
  1196                           ;usart_lib.c: 34:     {;usart_lib.c: 35:         CREN = 0;
  1197  0019AC  98AB               	bcf	4011,4,c	;volatile
  1198                           
  1199                           ;usart_lib.c: 36:         CREN = 1;
  1200  0019AE  88AB               	bsf	4011,4,c	;volatile
  1201  0019B0                     l1962:
  1202                           
  1203                           ;usart_lib.c: 39:     return RCREG;
  1204  0019B0  50AE               	movf	174,w,c	;volatile
  1205  0019B2  0012               	return		;funcret
  1206  0019B4                     __end_of_getch:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _pwm_set *****************
  1210 ;; Defined at:
  1211 ;;		line 3 in file "pwm_lib.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1225 ;;      Params:         0       0       0       0       0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1228 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text3
  1240  001862                     __ptext3:
  1241                           	callstack 0
  1242  001862                     _pwm_set:
  1243                           	callstack 29
  1244  001862                     
  1245                           ;pwm_lib.c: 5:     PORTC = 0x00;
  1246  001862  0E00               	movlw	0
  1247  001864  6E82               	movwf	130,c	;volatile
  1248                           
  1249                           ;pwm_lib.c: 6:     PORTB = 0x00;
  1250  001866  0E00               	movlw	0
  1251  001868  6E81               	movwf	129,c	;volatile
  1252  00186A                     
  1253                           ;pwm_lib.c: 7:     TRISCbits.RC2 = 0;
  1254  00186A  9494               	bcf	148,2,c	;volatile
  1255  00186C                     
  1256                           ;pwm_lib.c: 8:     TRISBbits.RB3 = 0;
  1257  00186C  9693               	bcf	147,3,c	;volatile
  1258                           
  1259                           ;pwm_lib.c: 33:     PR2 = 249;
  1260  00186E  0EF9               	movlw	249
  1261  001870  6ECB               	movwf	203,c	;volatile
  1262                           
  1263                           ;pwm_lib.c: 35:     CCPR1L = 0b00000000;
  1264  001872  0E00               	movlw	0
  1265  001874  6EBE               	movwf	190,c	;volatile
  1266  001876                     
  1267                           ;pwm_lib.c: 36:     CCP1CONbits.DC1B1 =0;
  1268  001876  9ABD               	bcf	189,5,c	;volatile
  1269  001878                     
  1270                           ;pwm_lib.c: 37:     CCP1CONbits.DC1B0 =0;
  1271  001878  98BD               	bcf	189,4,c	;volatile
  1272                           
  1273                           ;pwm_lib.c: 38:     CCP1CONbits.CCP1M = 0b1100;
  1274  00187A  50BD               	movf	189,w,c	;volatile
  1275  00187C  0BF0               	andlw	-16
  1276  00187E  090C               	iorlw	12
  1277  001880  6EBD               	movwf	189,c	;volatile
  1278                           
  1279                           ;pwm_lib.c: 41:     CCPR2L = 0b00000000;
  1280  001882  0E00               	movlw	0
  1281  001884  6EBB               	movwf	187,c	;volatile
  1282  001886                     
  1283                           ;pwm_lib.c: 42:     CCP2CONbits.DC2B1 =0;
  1284  001886  9ABA               	bcf	186,5,c	;volatile
  1285  001888                     
  1286                           ;pwm_lib.c: 43:     CCP2CONbits.DC2B0 =0;
  1287  001888  98BA               	bcf	186,4,c	;volatile
  1288                           
  1289                           ;pwm_lib.c: 44:     CCP2CONbits.CCP2M = 0b1100;
  1290  00188A  50BA               	movf	186,w,c	;volatile
  1291  00188C  0BF0               	andlw	-16
  1292  00188E  090C               	iorlw	12
  1293  001890  6EBA               	movwf	186,c	;volatile
  1294                           
  1295                           ;pwm_lib.c: 47:     T2CONbits.T2CKPS = 0b11;
  1296  001892  0E03               	movlw	3
  1297  001894  12CA               	iorwf	202,f,c	;volatile
  1298                           
  1299                           ;pwm_lib.c: 48:     TMR2 = 0;
  1300  001896  0E00               	movlw	0
  1301  001898  6ECC               	movwf	204,c	;volatile
  1302  00189A                     
  1303                           ;pwm_lib.c: 49:     T2CONbits.TMR2ON = 1;
  1304  00189A  84CA               	bsf	202,2,c	;volatile
  1305  00189C  0012               	return		;funcret
  1306  00189E                     __end_of_pwm_set:
  1307                           	callstack 0
  1308                           
  1309 ;; *************** function _pwm2_send *****************
  1310 ;; Defined at:
  1311 ;;		line 60 in file "pwm_lib.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  valor           2    0[COMRAM] unsigned short 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1325 ;;      Params:         2       0       0       0       0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1327 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1328 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1329 ;;Total ram usage:        4 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; Hardware stack levels required when called: 1
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text4
  1340  001756                     __ptext4:
  1341                           	callstack 0
  1342  001756                     _pwm2_send:
  1343                           	callstack 29
  1344  001756                     
  1345                           ;pwm_lib.c: 63:     CCPR2L = (valor >> 2) & 0xFF;
  1346  001756  C001  F003         	movff	pwm2_send@valor,??_pwm2_send
  1347  00175A  C002  F004         	movff	pwm2_send@valor+1,??_pwm2_send+1
  1348  00175E  90D8               	bcf	status,0,c
  1349  001760  3204               	rrcf	(??_pwm2_send+1)^0,f,c
  1350  001762  3203               	rrcf	??_pwm2_send^0,f,c
  1351  001764  90D8               	bcf	status,0,c
  1352  001766  3204               	rrcf	(??_pwm2_send+1)^0,f,c
  1353  001768  3203               	rrcf	??_pwm2_send^0,f,c
  1354  00176A  5003               	movf	??_pwm2_send^0,w,c
  1355  00176C  6EBB               	movwf	187,c	;volatile
  1356                           
  1357                           ;pwm_lib.c: 64:     CCP2CONbits.DC2B1 = valor & (1<<0);
  1358  00176E  C001  F003         	movff	pwm2_send@valor,??_pwm2_send
  1359  001772  0E01               	movlw	1
  1360  001774  1603               	andwf	??_pwm2_send^0,f,c
  1361  001776  3A03               	swapf	??_pwm2_send^0,f,c
  1362  001778  4603               	rlncf	??_pwm2_send^0,f,c
  1363  00177A  50BA               	movf	186,w,c	;volatile
  1364  00177C  1803               	xorwf	??_pwm2_send^0,w,c
  1365  00177E  0BDF               	andlw	-33
  1366  001780  1803               	xorwf	??_pwm2_send^0,w,c
  1367  001782  6EBA               	movwf	186,c	;volatile
  1368                           
  1369                           ;pwm_lib.c: 65:     CCP2CONbits.DC2B0 = valor & (1<<1);
  1370  001784  C001  F003         	movff	pwm2_send@valor,??_pwm2_send
  1371  001788  0E02               	movlw	2
  1372  00178A  1603               	andwf	??_pwm2_send^0,f,c
  1373  00178C  3A03               	swapf	??_pwm2_send^0,f,c
  1374  00178E  50BA               	movf	186,w,c	;volatile
  1375  001790  1803               	xorwf	??_pwm2_send^0,w,c
  1376  001792  0BEF               	andlw	-17
  1377  001794  1803               	xorwf	??_pwm2_send^0,w,c
  1378  001796  6EBA               	movwf	186,c	;volatile
  1379  001798  0012               	return		;funcret
  1380  00179A                     __end_of_pwm2_send:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _pwm1_send *****************
  1384 ;; Defined at:
  1385 ;;		line 52 in file "pwm_lib.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  valor           2    0[COMRAM] unsigned short 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1399 ;;      Params:         2       0       0       0       0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1401 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1402 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1403 ;;Total ram usage:        4 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; Hardware stack levels required when called: 1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text5
  1414  00179A                     __ptext5:
  1415                           	callstack 0
  1416  00179A                     _pwm1_send:
  1417                           	callstack 29
  1418  00179A                     
  1419                           ;pwm_lib.c: 55:     CCPR1L = (valor >> 2) & 0xFF;
  1420  00179A  C001  F003         	movff	pwm1_send@valor,??_pwm1_send
  1421  00179E  C002  F004         	movff	pwm1_send@valor+1,??_pwm1_send+1
  1422  0017A2  90D8               	bcf	status,0,c
  1423  0017A4  3204               	rrcf	(??_pwm1_send+1)^0,f,c
  1424  0017A6  3203               	rrcf	??_pwm1_send^0,f,c
  1425  0017A8  90D8               	bcf	status,0,c
  1426  0017AA  3204               	rrcf	(??_pwm1_send+1)^0,f,c
  1427  0017AC  3203               	rrcf	??_pwm1_send^0,f,c
  1428  0017AE  5003               	movf	??_pwm1_send^0,w,c
  1429  0017B0  6EBE               	movwf	190,c	;volatile
  1430                           
  1431                           ;pwm_lib.c: 56:     CCP1CONbits.DC1B1 = valor & (1<<0);
  1432  0017B2  C001  F003         	movff	pwm1_send@valor,??_pwm1_send
  1433  0017B6  0E01               	movlw	1
  1434  0017B8  1603               	andwf	??_pwm1_send^0,f,c
  1435  0017BA  3A03               	swapf	??_pwm1_send^0,f,c
  1436  0017BC  4603               	rlncf	??_pwm1_send^0,f,c
  1437  0017BE  50BD               	movf	189,w,c	;volatile
  1438  0017C0  1803               	xorwf	??_pwm1_send^0,w,c
  1439  0017C2  0BDF               	andlw	-33
  1440  0017C4  1803               	xorwf	??_pwm1_send^0,w,c
  1441  0017C6  6EBD               	movwf	189,c	;volatile
  1442                           
  1443                           ;pwm_lib.c: 57:     CCP1CONbits.DC1B0 = valor & (1<<1);
  1444  0017C8  C001  F003         	movff	pwm1_send@valor,??_pwm1_send
  1445  0017CC  0E02               	movlw	2
  1446  0017CE  1603               	andwf	??_pwm1_send^0,f,c
  1447  0017D0  3A03               	swapf	??_pwm1_send^0,f,c
  1448  0017D2  50BD               	movf	189,w,c	;volatile
  1449  0017D4  1803               	xorwf	??_pwm1_send^0,w,c
  1450  0017D6  0BEF               	andlw	-17
  1451  0017D8  1803               	xorwf	??_pwm1_send^0,w,c
  1452  0017DA  6EBD               	movwf	189,c	;volatile
  1453  0017DC  0012               	return		;funcret
  1454  0017DE                     __end_of_pwm1_send:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _printf *****************
  1458 ;; Defined at:
  1459 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  1462 ;;		 -> STR_1(7), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  ap              2    0[BANK0 ] PTR void [1]
  1465 ;;		 -> ?_printf(2), 
  1466 ;;  ret             2    0        int 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  2   88[COMRAM] int 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1476 ;;      Params:         6       0       0       0       0       0       0       0       0
  1477 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1479 ;;      Totals:         6       2       0       0       0       0       0       0       0
  1480 ;;Total ram usage:        8 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 8
  1483 ;; This function calls:
  1484 ;;		_vfprintf
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text6
  1491  001942                     __ptext6:
  1492                           	callstack 0
  1493  001942                     _printf:
  1494                           	callstack 22
  1495  001942  0E5B               	movlw	low (?_printf+2)
  1496  001944  0100               	movlb	0	; () banked
  1497  001946  6FAA               	movwf	printf@ap& (0+255),b
  1498  001948  0E00               	movlw	high (?_printf+2)
  1499  00194A  6FAB               	movwf	(printf@ap+1)& (0+255),b
  1500  00194C                     
  1501                           ; BSR set to: 0
  1502  00194C  0E00               	movlw	0
  1503  00194E  6E51               	movwf	vfprintf@fp^0,c
  1504  001950  0E00               	movlw	0
  1505  001952  6E52               	movwf	(vfprintf@fp+1)^0,c
  1506  001954  C059  F053         	movff	printf@fmt,vfprintf@fmt
  1507  001958  C05A  F054         	movff	printf@fmt+1,vfprintf@fmt+1
  1508  00195C  0EAA               	movlw	low printf@ap
  1509  00195E  6E55               	movwf	vfprintf@ap^0,c
  1510  001960  0E00               	movlw	high printf@ap
  1511  001962  6E56               	movwf	(vfprintf@ap+1)^0,c
  1512  001964  EC51  F00B         	call	_vfprintf	;wreg free
  1513  001968  0012               	return		;funcret
  1514  00196A                     __end_of_printf:
  1515                           	callstack 0
  1516                           
  1517 ;; *************** function _vfprintf *****************
  1518 ;; Defined at:
  1519 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1522 ;;		 -> NULL(0), 
  1523 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1524 ;;		 -> STR_1(7), 
  1525 ;;  ap              2   84[COMRAM] PTR PTR void 
  1526 ;;		 -> printf@ap(2), 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1529 ;;		 -> STR_1(7), 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  2   80[COMRAM] int 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         6       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        8 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 7
  1546 ;; This function calls:
  1547 ;;		_vfpfcnvrt
  1548 ;; This function is called by:
  1549 ;;		_printf
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text7
  1554  0016A2                     __ptext7:
  1555                           	callstack 0
  1556  0016A2                     _vfprintf:
  1557                           	callstack 22
  1558  0016A2                     
  1559                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1560  0016A2  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1561  0016A6  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1562  0016AA                     
  1563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1564  0016AA  0E00               	movlw	0
  1565  0016AC  0100               	movlb	0	; () banked
  1566  0016AE  6F61               	movwf	(_nout+1)& (0+255),b
  1567  0016B0  0E00               	movlw	0
  1568  0016B2  6F60               	movwf	_nout& (0+255),b
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1571  0016B4  EF6F  F00B         	goto	l2038
  1572  0016B8                     l2036:
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1576  0016B8  C051  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1577  0016BC  C052  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1578  0016C0  0E57               	movlw	low vfprintf@cfmt
  1579  0016C2  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1580  0016C4  0E00               	movlw	high vfprintf@cfmt
  1581  0016C6  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1582  0016C8  C055  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1583  0016CC  C056  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1584  0016D0  EC93  F006         	call	_vfpfcnvrt	;wreg free
  1585  0016D4  5041               	movf	?_vfpfcnvrt^0,w,c
  1586  0016D6  0100               	movlb	0	; () banked
  1587  0016D8  2760               	addwf	_nout& (0+255),f,b
  1588  0016DA  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
  1589  0016DC  2361               	addwfc	(_nout+1)& (0+255),f,b
  1590  0016DE                     l2038:
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1594  0016DE  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1595  0016E2  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1596  0016E6                     	if	0	;tblptru may be non-zero
  1597  0016E6                     	endif
  1598  0016E6                     	if	0	;tblptru may be non-zero
  1599  0016E6                     	endif
  1600  0016E6  0008               	tblrd		*
  1601  0016E8  50F5               	movf	tablat,w,c
  1602  0016EA  0900               	iorlw	0
  1603  0016EC  A4D8               	btfss	status,2,c
  1604  0016EE  EF7B  F00B         	goto	u1271
  1605  0016F2  EF7D  F00B         	goto	u1270
  1606  0016F6                     u1271:
  1607  0016F6  EF5C  F00B         	goto	l2036
  1608  0016FA                     u1270:
  1609  0016FA                     
  1610                           ; BSR set to: 0
  1611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1612  0016FA  C060  F051         	movff	_nout,?_vfprintf
  1613  0016FE  C061  F052         	movff	_nout+1,?_vfprintf+1
  1614  001702                     
  1615                           ; BSR set to: 0
  1616  001702  0012               	return		;funcret
  1617  001704                     __end_of_vfprintf:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _vfpfcnvrt *****************
  1621 ;; Defined at:
  1622 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1625 ;;		 -> NULL(0), 
  1626 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1627 ;;		 -> vfprintf@cfmt(2), 
  1628 ;;  ap              2   68[COMRAM] PTR PTR void 
  1629 ;;		 -> printf@ap(2), 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  ll              8   72[COMRAM] long long 
  1632 ;;  llu             8    0        unsigned long long 
  1633 ;;  f               4    0        unsigned long long 
  1634 ;;  vp              3    0        PTR void 
  1635 ;;  ct              3    0        unsigned char [3]
  1636 ;;  cp              3    0        PTR unsigned char 
  1637 ;;  i               2    0        int 
  1638 ;;  done            2    0        int 
  1639 ;;  c               1    0        unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  2   64[COMRAM] int 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1649 ;;      Params:         6       0       0       0       0       0       0       0       0
  1650 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1651 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1652 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1653 ;;Total ram usage:       16 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; Hardware stack levels required when called: 6
  1656 ;; This function calls:
  1657 ;;		_dtoa
  1658 ;;		_fputc
  1659 ;; This function is called by:
  1660 ;;		_vfprintf
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text8
  1665  000D26                     __ptext8:
  1666                           	callstack 0
  1667  000D26                     _vfpfcnvrt:
  1668                           	callstack 22
  1669  000D26                     
  1670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1671  000D26  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1672  000D2A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1673  000D2E  CFDE FFF6          	movff	postinc2,tblptrl
  1674  000D32  CFDD FFF7          	movff	postdec2,tblptrh
  1675  000D36                     	if	0	;tblptru may be non-zero
  1676  000D36                     	endif
  1677  000D36                     	if	0	;tblptru may be non-zero
  1678  000D36                     	endif
  1679  000D36  0008               	tblrd		*
  1680  000D38  50F5               	movf	tablat,w,c
  1681  000D3A  0A25               	xorlw	37
  1682  000D3C  A4D8               	btfss	status,2,c
  1683  000D3E  EFA3  F006         	goto	u1111
  1684  000D42  EFA5  F006         	goto	u1110
  1685  000D46                     u1111:
  1686  000D46  EF51  F007         	goto	l1950
  1687  000D4A                     u1110:
  1688  000D4A                     
  1689                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1690  000D4A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1691  000D4E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1692  000D52  2ADE               	incf	postinc2,f,c
  1693  000D54  0E00               	movlw	0
  1694  000D56  22DD               	addwfc	postdec2,f,c
  1695  000D58                     
  1696                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1697  000D58  0E00               	movlw	0
  1698  000D5A  0100               	movlb	0	; () banked
  1699  000D5C  6F63               	movwf	(_width+1)& (0+255),b
  1700  000D5E  0E00               	movlw	0
  1701  000D60  6F62               	movwf	_width& (0+255),b
  1702  000D62  C062  F066         	movff	_width,_flags
  1703  000D66  C063  F067         	movff	_width+1,_flags+1
  1704  000D6A                     
  1705                           ; BSR set to: 0
  1706                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1707  000D6A  6964               	setf	_prec& (0+255),b
  1708  000D6C  6965               	setf	(_prec+1)& (0+255),b
  1709  000D6E                     
  1710                           ; BSR set to: 0
  1711                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1712  000D6E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1713  000D72  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1714  000D76  CFDE FFF6          	movff	postinc2,tblptrl
  1715  000D7A  CFDD FFF7          	movff	postdec2,tblptrh
  1716  000D7E                     	if	0	;tblptru may be non-zero
  1717  000D7E                     	endif
  1718  000D7E                     	if	0	;tblptru may be non-zero
  1719  000D7E                     	endif
  1720  000D7E  0008               	tblrd		*
  1721  000D80  50F5               	movf	tablat,w,c
  1722  000D82  0A64               	xorlw	100
  1723  000D84  B4D8               	btfsc	status,2,c
  1724  000D86  EFC7  F006         	goto	u1121
  1725  000D8A  EFC9  F006         	goto	u1120
  1726  000D8E                     u1121:
  1727  000D8E  EFDB  F006         	goto	l1928
  1728  000D92                     u1120:
  1729  000D92                     
  1730                           ; BSR set to: 0
  1731  000D92  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1732  000D96  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1733  000D9A  CFDE FFF6          	movff	postinc2,tblptrl
  1734  000D9E  CFDD FFF7          	movff	postdec2,tblptrh
  1735  000DA2                     	if	0	;tblptru may be non-zero
  1736  000DA2                     	endif
  1737  000DA2                     	if	0	;tblptru may be non-zero
  1738  000DA2                     	endif
  1739  000DA2  0008               	tblrd		*
  1740  000DA4  50F5               	movf	tablat,w,c
  1741  000DA6  0A69               	xorlw	105
  1742  000DA8  A4D8               	btfss	status,2,c
  1743  000DAA  EFD9  F006         	goto	u1131
  1744  000DAE  EFDB  F006         	goto	u1130
  1745  000DB2                     u1131:
  1746  000DB2  EF1B  F007         	goto	l1934
  1747  000DB6                     u1130:
  1748  000DB6                     l1928:
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1752  000DB6  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1753  000DBA  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1754  000DBE  2ADE               	incf	postinc2,f,c
  1755  000DC0  0E00               	movlw	0
  1756  000DC2  22DD               	addwfc	postdec2,f,c
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1759  000DC4  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1760  000DC8  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1761  000DCC  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1762  000DD0  0E02               	movlw	2
  1763  000DD2  26DE               	addwf	postinc2,f,c
  1764  000DD4  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1765  000DD8  0E00               	movlw	0
  1766  000DDA  22DD               	addwfc	postdec2,f,c
  1767  000DDC  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1768  000DE0  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1769  000DE4  CFDE F049          	movff	postinc2,vfpfcnvrt@ll
  1770  000DE8  CFDD F04A          	movff	postdec2,vfpfcnvrt@ll+1
  1771  000DEC  0E00               	movlw	0
  1772  000DEE  BE4A               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1773  000DF0  0EFF               	movlw	-1
  1774  000DF2  6E4B               	movwf	(vfpfcnvrt@ll+2)^0,c
  1775  000DF4  6E4C               	movwf	(vfpfcnvrt@ll+3)^0,c
  1776  000DF6  6E4D               	movwf	(vfpfcnvrt@ll+4)^0,c
  1777  000DF8  6E4E               	movwf	(vfpfcnvrt@ll+5)^0,c
  1778  000DFA  6E4F               	movwf	(vfpfcnvrt@ll+6)^0,c
  1779  000DFC  6E50               	movwf	(vfpfcnvrt@ll+7)^0,c
  1780  000DFE                     
  1781                           ; BSR set to: 0
  1782                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1783  000DFE  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1784  000E02  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1785  000E06  C049  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  1786  000E0A  C04A  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1787  000E0E  C04B  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1788  000E12  C04C  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1789  000E16  C04D  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1790  000E1A  C04E  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1791  000E1E  C04F  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1792  000E22  C050  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1793  000E26  EC05  F004         	call	_dtoa	;wreg free
  1794  000E2A  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  1795  000E2E  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1796  000E32  EF6C  F007         	goto	l1058
  1797  000E36                     l1934:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1801  000E36  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1802  000E3A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1803  000E3E  CFDE FFF6          	movff	postinc2,tblptrl
  1804  000E42  CFDD FFF7          	movff	postdec2,tblptrh
  1805  000E46                     	if	0	;tblptru may be non-zero
  1806  000E46                     	endif
  1807  000E46                     	if	0	;tblptru may be non-zero
  1808  000E46                     	endif
  1809  000E46  0008               	tblrd		*
  1810  000E48  50F5               	movf	tablat,w,c
  1811  000E4A  0A25               	xorlw	37
  1812  000E4C  A4D8               	btfss	status,2,c
  1813  000E4E  EF2B  F007         	goto	u1141
  1814  000E52  EF2D  F007         	goto	u1140
  1815  000E56                     u1141:
  1816  000E56  EF44  F007         	goto	l1944
  1817  000E5A                     u1140:
  1818  000E5A                     
  1819                           ; BSR set to: 0
  1820                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1821  000E5A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1822  000E5E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1823  000E62  2ADE               	incf	postinc2,f,c
  1824  000E64  0E00               	movlw	0
  1825  000E66  22DD               	addwfc	postdec2,f,c
  1826  000E68                     
  1827                           ; BSR set to: 0
  1828                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1829  000E68  0E00               	movlw	0
  1830  000E6A  6E03               	movwf	(fputc@c+1)^0,c
  1831  000E6C  0E25               	movlw	37
  1832  000E6E  6E02               	movwf	fputc@c^0,c
  1833  000E70  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1834  000E74  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1835  000E78  ECCE  F00A         	call	_fputc	;wreg free
  1836  000E7C                     l1940:
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1839  000E7C  0E00               	movlw	0
  1840  000E7E  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  1841  000E80  0E01               	movlw	1
  1842  000E82  6E41               	movwf	?_vfpfcnvrt^0,c
  1843  000E84  EF6C  F007         	goto	l1058
  1844  000E88                     l1944:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1848  000E88  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1849  000E8C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1850  000E90  2ADE               	incf	postinc2,f,c
  1851  000E92  0E00               	movlw	0
  1852  000E94  22DD               	addwfc	postdec2,f,c
  1853  000E96                     
  1854                           ; BSR set to: 0
  1855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1856  000E96  0E00               	movlw	0
  1857  000E98  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  1858  000E9A  0E00               	movlw	0
  1859  000E9C  6E41               	movwf	?_vfpfcnvrt^0,c
  1860  000E9E  EF6C  F007         	goto	l1058
  1861  000EA2                     l1950:
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1864  000EA2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1865  000EA6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1866  000EAA  CFDE FFF6          	movff	postinc2,tblptrl
  1867  000EAE  CFDD FFF7          	movff	postdec2,tblptrh
  1868  000EB2                     	if	0	;tblptru may be non-zero
  1869  000EB2                     	endif
  1870  000EB2                     	if	0	;tblptru may be non-zero
  1871  000EB2                     	endif
  1872  000EB2  0008               	tblrd		*
  1873  000EB4  50F5               	movf	tablat,w,c
  1874  000EB6  6E02               	movwf	fputc@c^0,c
  1875  000EB8  6A03               	clrf	(fputc@c+1)^0,c
  1876  000EBA  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1877  000EBE  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1878  000EC2  ECCE  F00A         	call	_fputc	;wreg free
  1879  000EC6                     
  1880                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1881  000EC6  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1882  000ECA  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1883  000ECE  2ADE               	incf	postinc2,f,c
  1884  000ED0  0E00               	movlw	0
  1885  000ED2  22DD               	addwfc	postdec2,f,c
  1886  000ED4  EF3E  F007         	goto	l1940
  1887  000ED8                     l1058:
  1888  000ED8  0012               	return		;funcret
  1889  000EDA                     __end_of_vfpfcnvrt:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function _dtoa *****************
  1893 ;; Defined at:
  1894 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1897 ;;		 -> NULL(0), 
  1898 ;;  d               8   30[COMRAM] long long 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  n               8   54[COMRAM] long long 
  1901 ;;  i               2   62[COMRAM] int 
  1902 ;;  s               2   52[COMRAM] int 
  1903 ;;  w               2   50[COMRAM] int 
  1904 ;;  p               2   48[COMRAM] int 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  2   28[COMRAM] int 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:        10       0       0       0       0       0       0       0       0
  1915 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1917 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:       36 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 5
  1921 ;; This function calls:
  1922 ;;		___aodiv
  1923 ;;		___aomod
  1924 ;;		_abs
  1925 ;;		_pad
  1926 ;; This function is called by:
  1927 ;;		_vfpfcnvrt
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text9
  1932  00080A                     __ptext9:
  1933                           	callstack 0
  1934  00080A                     _dtoa:
  1935                           	callstack 22
  1936  00080A                     
  1937                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1938  00080A  C01F  F037         	movff	dtoa@d,dtoa@n
  1939  00080E  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  1940  000812  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  1941  000816  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  1942  00081A  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  1943  00081E  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  1944  000822  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  1945  000826  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  1946  00082A                     
  1947                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1948  00082A  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  1949  00082C  EF1A  F004         	goto	u961
  1950  000830  EF1D  F004         	goto	u960
  1951  000834                     u961:
  1952  000834  0E01               	movlw	1
  1953  000836  EF1E  F004         	goto	u970
  1954  00083A                     u960:
  1955  00083A  0E00               	movlw	0
  1956  00083C                     u970:
  1957  00083C  6E35               	movwf	dtoa@s^0,c
  1958  00083E  6A36               	clrf	(dtoa@s+1)^0,c
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1961  000840  5035               	movf	dtoa@s^0,w,c
  1962  000842  1036               	iorwf	(dtoa@s+1)^0,w,c
  1963  000844  B4D8               	btfsc	status,2,c
  1964  000846  EF27  F004         	goto	u981
  1965  00084A  EF29  F004         	goto	u980
  1966  00084E                     u981:
  1967  00084E  EF39  F004         	goto	l1860
  1968  000852                     u980:
  1969  000852                     
  1970                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1971  000852  1E3E               	comf	(dtoa@n+7)^0,f,c
  1972  000854  1E3D               	comf	(dtoa@n+6)^0,f,c
  1973  000856  1E3C               	comf	(dtoa@n+5)^0,f,c
  1974  000858  1E3B               	comf	(dtoa@n+4)^0,f,c
  1975  00085A  1E3A               	comf	(dtoa@n+3)^0,f,c
  1976  00085C  1E39               	comf	(dtoa@n+2)^0,f,c
  1977  00085E  1E38               	comf	(dtoa@n+1)^0,f,c
  1978  000860  6C37               	negf	dtoa@n^0,c
  1979  000862  0E00               	movlw	0
  1980  000864  2238               	addwfc	(dtoa@n+1)^0,f,c
  1981  000866  2239               	addwfc	(dtoa@n+2)^0,f,c
  1982  000868  223A               	addwfc	(dtoa@n+3)^0,f,c
  1983  00086A  223B               	addwfc	(dtoa@n+4)^0,f,c
  1984  00086C  223C               	addwfc	(dtoa@n+5)^0,f,c
  1985  00086E  223D               	addwfc	(dtoa@n+6)^0,f,c
  1986  000870  223E               	addwfc	(dtoa@n+7)^0,f,c
  1987  000872                     l1860:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1990  000872  0100               	movlb	0	; () banked
  1991  000874  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1992  000876  EF3F  F004         	goto	u991
  1993  00087A  EF41  F004         	goto	u990
  1994  00087E                     u991:
  1995  00087E  EF42  F004         	goto	l1864
  1996  000882                     u990:
  1997  000882                     
  1998                           ; BSR set to: 0
  1999                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2000  000882  9366               	bcf	_flags& (0+255),1,b
  2001  000884                     l1864:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2005  000884  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2006  000886  EF4F  F004         	goto	u1000
  2007  00088A  5165               	movf	(_prec+1)& (0+255),w,b
  2008  00088C  E106               	bnz	u1001
  2009  00088E  0564               	decf	_prec& (0+255),w,b
  2010  000890  B0D8               	btfsc	status,0,c
  2011  000892  EF4D  F004         	goto	u1001
  2012  000896  EF4F  F004         	goto	u1000
  2013  00089A                     u1001:
  2014  00089A  EF55  F004         	goto	l1031
  2015  00089E                     u1000:
  2016  00089E                     
  2017                           ; BSR set to: 0
  2018  00089E  0E00               	movlw	0
  2019  0008A0  6E32               	movwf	(dtoa@p+1)^0,c
  2020  0008A2  0E01               	movlw	1
  2021  0008A4  6E31               	movwf	dtoa@p^0,c
  2022  0008A6  EF59  F004         	goto	l1033
  2023  0008AA                     l1031:
  2024                           
  2025                           ; BSR set to: 0
  2026  0008AA  C064  F031         	movff	_prec,dtoa@p
  2027  0008AE  C065  F032         	movff	_prec+1,dtoa@p+1
  2028  0008B2                     l1033:
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2032  0008B2  C062  F033         	movff	_width,dtoa@w
  2033  0008B6  C063  F034         	movff	_width+1,dtoa@w+1
  2034  0008BA                     
  2035                           ; BSR set to: 0
  2036                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2037  0008BA  5035               	movf	dtoa@s^0,w,c
  2038  0008BC  1036               	iorwf	(dtoa@s+1)^0,w,c
  2039  0008BE  A4D8               	btfss	status,2,c
  2040  0008C0  EF64  F004         	goto	u1011
  2041  0008C4  EF66  F004         	goto	u1010
  2042  0008C8                     u1011:
  2043  0008C8  EF6D  F004         	goto	l1872
  2044  0008CC                     u1010:
  2045  0008CC                     
  2046                           ; BSR set to: 0
  2047  0008CC  A566               	btfss	_flags& (0+255),2,b
  2048  0008CE  EF6B  F004         	goto	u1021
  2049  0008D2  EF6D  F004         	goto	u1020
  2050  0008D6                     u1021:
  2051  0008D6  EF70  F004         	goto	l1874
  2052  0008DA                     u1020:
  2053  0008DA                     l1872:
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  2057  0008DA  0633               	decf	dtoa@w^0,f,c
  2058  0008DC  A0D8               	btfss	status,0,c
  2059  0008DE  0634               	decf	(dtoa@w+1)^0,f,c
  2060  0008E0                     l1874:
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2064  0008E0  0E00               	movlw	0
  2065  0008E2  6E40               	movwf	(dtoa@i+1)^0,c
  2066  0008E4  0E1F               	movlw	31
  2067  0008E6  6E3F               	movwf	dtoa@i^0,c
  2068  0008E8                     
  2069                           ; BSR set to: 0
  2070                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2071  0008E8  0E00               	movlw	0
  2072  0008EA  6F9F               	movwf	(_dbuf+31)& (0+255),b
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2075  0008EC  EFF4  F004         	goto	l1888
  2076  0008F0                     l1878:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  2079  0008F0  063F               	decf	dtoa@i^0,f,c
  2080  0008F2  A0D8               	btfss	status,0,c
  2081  0008F4  0640               	decf	(dtoa@i+1)^0,f,c
  2082  0008F6                     
  2083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2084  0008F6  0E80               	movlw	low _dbuf
  2085  0008F8  243F               	addwf	dtoa@i^0,w,c
  2086  0008FA  6ED9               	movwf	fsr2l,c
  2087  0008FC  0E00               	movlw	high _dbuf
  2088  0008FE  2040               	addwfc	(dtoa@i+1)^0,w,c
  2089  000900  6EDA               	movwf	fsr2h,c
  2090  000902  C037  F001         	movff	dtoa@n,___aomod@dividend
  2091  000906  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2092  00090A  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2093  00090E  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2094  000912  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2095  000916  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2096  00091A  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2097  00091E  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2098  000922  0E0A               	movlw	10
  2099  000924  6E09               	movwf	___aomod@divisor^0,c
  2100  000926  0E00               	movlw	0
  2101  000928  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2102  00092A  0E00               	movlw	0
  2103  00092C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2104  00092E  0E00               	movlw	0
  2105  000930  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2106  000932  0E00               	movlw	0
  2107  000934  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2108  000936  0E00               	movlw	0
  2109  000938  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2110  00093A  0E00               	movlw	0
  2111  00093C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2112  00093E  0E00               	movlw	0
  2113  000940  6E10               	movwf	(___aomod@divisor+7)^0,c
  2114  000942  EC31  F008         	call	___aomod	;wreg free
  2115  000946  C001  F027         	movff	?___aomod,??_dtoa
  2116  00094A  C002  F028         	movff	?___aomod+1,??_dtoa+1
  2117  00094E  C003  F029         	movff	?___aomod+2,??_dtoa+2
  2118  000952  C004  F02A         	movff	?___aomod+3,??_dtoa+3
  2119  000956  C005  F02B         	movff	?___aomod+4,??_dtoa+4
  2120  00095A  C006  F02C         	movff	?___aomod+5,??_dtoa+5
  2121  00095E  C007  F02D         	movff	?___aomod+6,??_dtoa+6
  2122  000962  C008  F02E         	movff	?___aomod+7,??_dtoa+7
  2123  000966  C027  F013         	movff	??_dtoa,abs@a
  2124  00096A  C029  F014         	movff	??_dtoa+2,abs@a+1
  2125  00096E  EC11  F00C         	call	_abs	;wreg free
  2126  000972  5013               	movf	?_abs^0,w,c
  2127  000974  0F30               	addlw	48
  2128  000976  6EDF               	movwf	indf2,c
  2129  000978                     
  2130                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  2131  000978  0631               	decf	dtoa@p^0,f,c
  2132  00097A  A0D8               	btfss	status,0,c
  2133  00097C  0632               	decf	(dtoa@p+1)^0,f,c
  2134  00097E                     
  2135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  2136  00097E  0633               	decf	dtoa@w^0,f,c
  2137  000980  A0D8               	btfss	status,0,c
  2138  000982  0634               	decf	(dtoa@w+1)^0,f,c
  2139  000984                     
  2140                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2141  000984  C037  F001         	movff	dtoa@n,___aodiv@dividend
  2142  000988  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2143  00098C  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2144  000990  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2145  000994  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2146  000998  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2147  00099C  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2148  0009A0  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2149  0009A4  0E0A               	movlw	10
  2150  0009A6  6E09               	movwf	___aodiv@divisor^0,c
  2151  0009A8  0E00               	movlw	0
  2152  0009AA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2153  0009AC  0E00               	movlw	0
  2154  0009AE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2155  0009B0  0E00               	movlw	0
  2156  0009B2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2157  0009B4  0E00               	movlw	0
  2158  0009B6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2159  0009B8  0E00               	movlw	0
  2160  0009BA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2161  0009BC  0E00               	movlw	0
  2162  0009BE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2163  0009C0  0E00               	movlw	0
  2164  0009C2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2165  0009C4  EC6D  F007         	call	___aodiv	;wreg free
  2166  0009C8  C001  F037         	movff	?___aodiv,dtoa@n
  2167  0009CC  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  2168  0009D0  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  2169  0009D4  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  2170  0009D8  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  2171  0009DC  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  2172  0009E0  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  2173  0009E4  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  2174  0009E8                     l1888:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2177  0009E8  BE40               	btfsc	(dtoa@i+1)^0,7,c
  2178  0009EA  EFFF  F004         	goto	u1031
  2179  0009EE  5040               	movf	(dtoa@i+1)^0,w,c
  2180  0009F0  E108               	bnz	u1030
  2181  0009F2  043F               	decf	dtoa@i^0,w,c
  2182  0009F4  A0D8               	btfss	status,0,c
  2183  0009F6  EFFF  F004         	goto	u1031
  2184  0009FA  EF01  F005         	goto	u1030
  2185  0009FE                     u1031:
  2186  0009FE  EF32  F005         	goto	l1898
  2187  000A02                     u1030:
  2188  000A02  5037               	movf	dtoa@n^0,w,c
  2189  000A04  1038               	iorwf	(dtoa@n+1)^0,w,c
  2190  000A06  1039               	iorwf	(dtoa@n+2)^0,w,c
  2191  000A08  103A               	iorwf	(dtoa@n+3)^0,w,c
  2192  000A0A  103B               	iorwf	(dtoa@n+4)^0,w,c
  2193  000A0C  103C               	iorwf	(dtoa@n+5)^0,w,c
  2194  000A0E  103D               	iorwf	(dtoa@n+6)^0,w,c
  2195  000A10  103E               	iorwf	(dtoa@n+7)^0,w,c
  2196  000A12  A4D8               	btfss	status,2,c
  2197  000A14  EF0E  F005         	goto	u1041
  2198  000A18  EF10  F005         	goto	u1040
  2199  000A1C                     u1041:
  2200  000A1C  EF78  F004         	goto	l1878
  2201  000A20                     u1040:
  2202  000A20  BE32               	btfsc	(dtoa@p+1)^0,7,c
  2203  000A22  EF1D  F005         	goto	u1050
  2204  000A26  5032               	movf	(dtoa@p+1)^0,w,c
  2205  000A28  E106               	bnz	u1051
  2206  000A2A  0431               	decf	dtoa@p^0,w,c
  2207  000A2C  B0D8               	btfsc	status,0,c
  2208  000A2E  EF1B  F005         	goto	u1051
  2209  000A32  EF1D  F005         	goto	u1050
  2210  000A36                     u1051:
  2211  000A36  EF78  F004         	goto	l1878
  2212  000A3A                     u1050:
  2213  000A3A  BE34               	btfsc	(dtoa@w+1)^0,7,c
  2214  000A3C  EF28  F005         	goto	u1061
  2215  000A40  5034               	movf	(dtoa@w+1)^0,w,c
  2216  000A42  E108               	bnz	u1060
  2217  000A44  0433               	decf	dtoa@w^0,w,c
  2218  000A46  A0D8               	btfss	status,0,c
  2219  000A48  EF28  F005         	goto	u1061
  2220  000A4C  EF2A  F005         	goto	u1060
  2221  000A50                     u1061:
  2222  000A50  EF32  F005         	goto	l1898
  2223  000A54                     u1060:
  2224  000A54  0100               	movlb	0	; () banked
  2225  000A56  B366               	btfsc	_flags& (0+255),1,b
  2226  000A58  EF30  F005         	goto	u1071
  2227  000A5C  EF32  F005         	goto	u1070
  2228  000A60                     u1071:
  2229  000A60  EF78  F004         	goto	l1878
  2230  000A64                     u1070:
  2231  000A64                     l1898:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2234  000A64  5035               	movf	dtoa@s^0,w,c
  2235  000A66  1036               	iorwf	(dtoa@s+1)^0,w,c
  2236  000A68  A4D8               	btfss	status,2,c
  2237  000A6A  EF39  F005         	goto	u1081
  2238  000A6E  EF3B  F005         	goto	u1080
  2239  000A72                     u1081:
  2240  000A72  EF43  F005         	goto	l1902
  2241  000A76                     u1080:
  2242  000A76  0100               	movlb	0	; () banked
  2243  000A78  A566               	btfss	_flags& (0+255),2,b
  2244  000A7A  EF41  F005         	goto	u1091
  2245  000A7E  EF43  F005         	goto	u1090
  2246  000A82                     u1091:
  2247  000A82  EF61  F005         	goto	l1912
  2248  000A86                     u1090:
  2249  000A86                     l1902:
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2252  000A86  063F               	decf	dtoa@i^0,f,c
  2253  000A88  A0D8               	btfss	status,0,c
  2254  000A8A  0640               	decf	(dtoa@i+1)^0,f,c
  2255  000A8C                     
  2256                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2257  000A8C  5035               	movf	dtoa@s^0,w,c
  2258  000A8E  1036               	iorwf	(dtoa@s+1)^0,w,c
  2259  000A90  A4D8               	btfss	status,2,c
  2260  000A92  EF4D  F005         	goto	u1101
  2261  000A96  EF4F  F005         	goto	u1100
  2262  000A9A                     u1101:
  2263  000A9A  EF55  F005         	goto	l1908
  2264  000A9E                     u1100:
  2265  000A9E  0E00               	movlw	0
  2266  000AA0  6E30               	movwf	(_dtoa$1630+1)^0,c
  2267  000AA2  0E2B               	movlw	43
  2268  000AA4  6E2F               	movwf	_dtoa$1630^0,c
  2269  000AA6  EF59  F005         	goto	l1910
  2270  000AAA                     l1908:
  2271  000AAA  0E00               	movlw	0
  2272  000AAC  6E30               	movwf	(_dtoa$1630+1)^0,c
  2273  000AAE  0E2D               	movlw	45
  2274  000AB0  6E2F               	movwf	_dtoa$1630^0,c
  2275  000AB2                     l1910:
  2276  000AB2  0E80               	movlw	low _dbuf
  2277  000AB4  243F               	addwf	dtoa@i^0,w,c
  2278  000AB6  6ED9               	movwf	fsr2l,c
  2279  000AB8  0E00               	movlw	high _dbuf
  2280  000ABA  2040               	addwfc	(dtoa@i+1)^0,w,c
  2281  000ABC  6EDA               	movwf	fsr2h,c
  2282  000ABE  C02F  FFDF         	movff	_dtoa$1630,indf2
  2283  000AC2                     l1912:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2286  000AC2  C01D  F012         	movff	dtoa@fp,pad@fp
  2287  000AC6  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2288  000ACA  0E80               	movlw	low _dbuf
  2289  000ACC  243F               	addwf	dtoa@i^0,w,c
  2290  000ACE  6E14               	movwf	pad@buf^0,c
  2291  000AD0  0E00               	movlw	high _dbuf
  2292  000AD2  2040               	addwfc	(dtoa@i+1)^0,w,c
  2293  000AD4  6E15               	movwf	(pad@buf+1)^0,c
  2294  000AD6  C033  F016         	movff	dtoa@w,pad@p
  2295  000ADA  C034  F017         	movff	dtoa@w+1,pad@p+1
  2296  000ADE  EC11  F00A         	call	_pad	;wreg free
  2297  000AE2  C012  F01D         	movff	?_pad,?_dtoa
  2298  000AE6  C013  F01E         	movff	?_pad+1,?_dtoa+1
  2299  000AEA  0012               	return		;funcret
  2300  000AEC                     __end_of_dtoa:
  2301                           	callstack 0
  2302                           
  2303 ;; *************** function _pad *****************
  2304 ;; Defined at:
  2305 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2308 ;;		 -> NULL(0), 
  2309 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2310 ;;		 -> dbuf(32), 
  2311 ;;  p               2   21[COMRAM] int 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  w               2   26[COMRAM] int 
  2314 ;;  i               2   24[COMRAM] int 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2   17[COMRAM] int 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2324 ;;      Params:         6       0       0       0       0       0       0       0       0
  2325 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2326 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2327 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2328 ;;Total ram usage:       11 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 4
  2331 ;; This function calls:
  2332 ;;		_fputc
  2333 ;;		_fputs
  2334 ;;		_strlen
  2335 ;; This function is called by:
  2336 ;;		_dtoa
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text10
  2341  001422                     __ptext10:
  2342                           	callstack 0
  2343  001422                     _pad:
  2344                           	callstack 22
  2345  001422                     
  2346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2347  001422  0100               	movlb	0	; () banked
  2348  001424  A166               	btfss	_flags& (0+255),0,b
  2349  001426  EF17  F00A         	goto	u911
  2350  00142A  EF19  F00A         	goto	u910
  2351  00142E                     u911:
  2352  00142E  EF23  F00A         	goto	l1832
  2353  001432                     u910:
  2354  001432                     
  2355                           ; BSR set to: 0
  2356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2357  001432  C014  F00B         	movff	pad@buf,fputs@s
  2358  001436  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2359  00143A  C012  F00D         	movff	pad@fp,fputs@fp
  2360  00143E  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2361  001442  ECEF  F00B         	call	_fputs	;wreg free
  2362  001446                     l1832:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2365  001446  BE17               	btfsc	(pad@p+1)^0,7,c
  2366  001448  EF28  F00A         	goto	u921
  2367  00144C  EF2A  F00A         	goto	u920
  2368  001450                     u921:
  2369  001450  EF30  F00A         	goto	l1836
  2370  001454                     u920:
  2371  001454  C016  F01B         	movff	pad@p,pad@w
  2372  001458  C017  F01C         	movff	pad@p+1,pad@w+1
  2373  00145C  EF34  F00A         	goto	l1020
  2374  001460                     l1836:
  2375  001460  0E00               	movlw	0
  2376  001462  6E1C               	movwf	(pad@w+1)^0,c
  2377  001464  0E00               	movlw	0
  2378  001466  6E1B               	movwf	pad@w^0,c
  2379  001468                     l1020:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2382  001468  0E00               	movlw	0
  2383  00146A  6E1A               	movwf	(pad@i+1)^0,c
  2384  00146C  0E00               	movlw	0
  2385  00146E  6E19               	movwf	pad@i^0,c
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2388  001470  EF46  F00A         	goto	l1842
  2389  001474                     l1838:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2392  001474  0E00               	movlw	0
  2393  001476  6E03               	movwf	(fputc@c+1)^0,c
  2394  001478  0E20               	movlw	32
  2395  00147A  6E02               	movwf	fputc@c^0,c
  2396  00147C  C012  F004         	movff	pad@fp,fputc@fp
  2397  001480  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2398  001484  ECCE  F00A         	call	_fputc	;wreg free
  2399  001488                     
  2400                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2401  001488  4A19               	infsnz	pad@i^0,f,c
  2402  00148A  2A1A               	incf	(pad@i+1)^0,f,c
  2403  00148C                     l1842:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2406  00148C  501B               	movf	pad@w^0,w,c
  2407  00148E  5C19               	subwf	pad@i^0,w,c
  2408  001490  501A               	movf	(pad@i+1)^0,w,c
  2409  001492  0A80               	xorlw	128
  2410  001494  6E18               	movwf	??_pad^0,c
  2411  001496  501C               	movf	(pad@w+1)^0,w,c
  2412  001498  0A80               	xorlw	128
  2413  00149A  5818               	subwfb	??_pad^0,w,c
  2414  00149C  A0D8               	btfss	status,0,c
  2415  00149E  EF53  F00A         	goto	u931
  2416  0014A2  EF55  F00A         	goto	u930
  2417  0014A6                     u931:
  2418  0014A6  EF3A  F00A         	goto	l1838
  2419  0014AA                     u930:
  2420  0014AA                     
  2421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2422  0014AA  0100               	movlb	0	; () banked
  2423  0014AC  B166               	btfsc	_flags& (0+255),0,b
  2424  0014AE  EF5B  F00A         	goto	u941
  2425  0014B2  EF5D  F00A         	goto	u940
  2426  0014B6                     u941:
  2427  0014B6  EF67  F00A         	goto	l1846
  2428  0014BA                     u940:
  2429  0014BA                     
  2430                           ; BSR set to: 0
  2431                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2432  0014BA  C014  F00B         	movff	pad@buf,fputs@s
  2433  0014BE  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2434  0014C2  C012  F00D         	movff	pad@fp,fputs@fp
  2435  0014C6  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2436  0014CA  ECEF  F00B         	call	_fputs	;wreg free
  2437  0014CE                     l1846:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2440  0014CE  C014  F001         	movff	pad@buf,strlen@s
  2441  0014D2  C015  F002         	movff	pad@buf+1,strlen@s+1
  2442  0014D6  EC6B  F00C         	call	_strlen	;wreg free
  2443  0014DA  501B               	movf	pad@w^0,w,c
  2444  0014DC  2401               	addwf	?_strlen^0,w,c
  2445  0014DE  6E12               	movwf	?_pad^0,c
  2446  0014E0  501C               	movf	(pad@w+1)^0,w,c
  2447  0014E2  2002               	addwfc	(?_strlen+1)^0,w,c
  2448  0014E4  6E13               	movwf	(?_pad+1)^0,c
  2449  0014E6  0012               	return		;funcret
  2450  0014E8                     __end_of_pad:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _strlen *****************
  2454 ;; Defined at:
  2455 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2458 ;;		 -> dbuf(32), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2461 ;;		 -> dbuf(32), 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  2    0[COMRAM] unsigned int 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:         2       0       0       0       0       0       0       0       0
  2472 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2474 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2475 ;;Total ram usage:        4 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_pad
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text11
  2486  0018D6                     __ptext11:
  2487                           	callstack 0
  2488  0018D6                     _strlen:
  2489                           	callstack 24
  2490  0018D6  C001  F003         	movff	strlen@s,strlen@a
  2491  0018DA  C002  F004         	movff	strlen@s+1,strlen@a+1
  2492  0018DE  EF73  F00C         	goto	l1742
  2493  0018E2                     l1740:
  2494  0018E2  4A01               	infsnz	strlen@s^0,f,c
  2495  0018E4  2A02               	incf	(strlen@s+1)^0,f,c
  2496  0018E6                     l1742:
  2497  0018E6  C001  FFD9         	movff	strlen@s,fsr2l
  2498  0018EA  C002  FFDA         	movff	strlen@s+1,fsr2h
  2499  0018EE  50DF               	movf	indf2,w,c
  2500  0018F0  A4D8               	btfss	status,2,c
  2501  0018F2  EF7D  F00C         	goto	u771
  2502  0018F6  EF7F  F00C         	goto	u770
  2503  0018FA                     u771:
  2504  0018FA  EF71  F00C         	goto	l1740
  2505  0018FE                     u770:
  2506  0018FE  5003               	movf	strlen@a^0,w,c
  2507  001900  5C01               	subwf	strlen@s^0,w,c
  2508  001902  6E01               	movwf	?_strlen^0,c
  2509  001904  5004               	movf	(strlen@a+1)^0,w,c
  2510  001906  5802               	subwfb	(strlen@s+1)^0,w,c
  2511  001908  6E02               	movwf	(?_strlen+1)^0,c
  2512  00190A  0012               	return		;funcret
  2513  00190C                     __end_of_strlen:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _fputs *****************
  2517 ;; Defined at:
  2518 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2521 ;;		 -> dbuf(32), 
  2522 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  2523 ;;		 -> NULL(0), 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  i               2   15[COMRAM] int 
  2526 ;;  c               1   14[COMRAM] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2   10[COMRAM] int 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         4       0       0       0       0       0       0       0       0
  2537 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2539 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2540 ;;Total ram usage:        7 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 3
  2543 ;; This function calls:
  2544 ;;		_fputc
  2545 ;; This function is called by:
  2546 ;;		_pad
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text12
  2551  0017DE                     __ptext12:
  2552                           	callstack 0
  2553  0017DE                     _fputs:
  2554                           	callstack 22
  2555  0017DE  0E00               	movlw	0
  2556  0017E0  6E11               	movwf	(fputs@i+1)^0,c
  2557  0017E2  0E00               	movlw	0
  2558  0017E4  6E10               	movwf	fputs@i^0,c
  2559  0017E6  EF00  F00C         	goto	l1736
  2560  0017EA                     l1732:
  2561  0017EA  C00F  F002         	movff	fputs@c,fputc@c
  2562  0017EE  6A03               	clrf	(fputc@c+1)^0,c
  2563  0017F0  C00D  F004         	movff	fputs@fp,fputc@fp
  2564  0017F4  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  2565  0017F8  ECCE  F00A         	call	_fputc	;wreg free
  2566  0017FC  4A10               	infsnz	fputs@i^0,f,c
  2567  0017FE  2A11               	incf	(fputs@i+1)^0,f,c
  2568  001800                     l1736:
  2569  001800  5010               	movf	fputs@i^0,w,c
  2570  001802  240B               	addwf	fputs@s^0,w,c
  2571  001804  6ED9               	movwf	fsr2l,c
  2572  001806  5011               	movf	(fputs@i+1)^0,w,c
  2573  001808  200C               	addwfc	(fputs@s+1)^0,w,c
  2574  00180A  6EDA               	movwf	fsr2h,c
  2575  00180C  50DF               	movf	indf2,w,c
  2576  00180E  6E0F               	movwf	fputs@c^0,c
  2577  001810  500F               	movf	fputs@c^0,w,c
  2578  001812  A4D8               	btfss	status,2,c
  2579  001814  EF0E  F00C         	goto	u761
  2580  001818  EF10  F00C         	goto	u760
  2581  00181C                     u761:
  2582  00181C  EFF5  F00B         	goto	l1732
  2583  001820                     u760:
  2584  001820  0012               	return		;funcret
  2585  001822                     __end_of_fputs:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _fputc *****************
  2589 ;; Defined at:
  2590 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  c               2    1[COMRAM] int 
  2593 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2594 ;;		 -> NULL(0), 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  2    1[COMRAM] int 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2606 ;;      Params:         4       0       0       0       0       0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2608 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2609 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2610 ;;Total ram usage:        9 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 2
  2613 ;; This function calls:
  2614 ;;		_putch
  2615 ;; This function is called by:
  2616 ;;		_pad
  2617 ;;		_vfpfcnvrt
  2618 ;;		_fputs
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text13
  2623  00159C                     __ptext13:
  2624                           	callstack 0
  2625  00159C                     _fputc:
  2626                           	callstack 25
  2627  00159C  5004               	movf	fputc@fp^0,w,c
  2628  00159E  1005               	iorwf	(fputc@fp+1)^0,w,c
  2629  0015A0  B4D8               	btfsc	status,2,c
  2630  0015A2  EFD5  F00A         	goto	u721
  2631  0015A6  EFD7  F00A         	goto	u720
  2632  0015AA                     u721:
  2633  0015AA  EFE0  F00A         	goto	l1720
  2634  0015AE                     u720:
  2635  0015AE  5004               	movf	fputc@fp^0,w,c
  2636  0015B0  1005               	iorwf	(fputc@fp+1)^0,w,c
  2637  0015B2  A4D8               	btfss	status,2,c
  2638  0015B4  EFDE  F00A         	goto	u731
  2639  0015B8  EFE0  F00A         	goto	u730
  2640  0015BC                     u731:
  2641  0015BC  EFE5  F00A         	goto	l1722
  2642  0015C0                     u730:
  2643  0015C0                     l1720:
  2644  0015C0  5002               	movf	fputc@c^0,w,c
  2645  0015C2  EC05  F00D         	call	_putch
  2646  0015C6  EF18  F00B         	goto	l1084
  2647  0015CA                     l1722:
  2648  0015CA  EE20 F009          	lfsr	2,9
  2649  0015CE  5004               	movf	fputc@fp^0,w,c
  2650  0015D0  26D9               	addwf	fsr2l,f,c
  2651  0015D2  5005               	movf	(fputc@fp+1)^0,w,c
  2652  0015D4  22DA               	addwfc	fsr2h,f,c
  2653  0015D6  50DE               	movf	postinc2,w,c
  2654  0015D8  10DE               	iorwf	postinc2,w,c
  2655  0015DA  B4D8               	btfsc	status,2,c
  2656  0015DC  EFF2  F00A         	goto	u741
  2657  0015E0  EFF4  F00A         	goto	u740
  2658  0015E4                     u741:
  2659  0015E4  EF0F  F00B         	goto	l1726
  2660  0015E8                     u740:
  2661  0015E8  EE20 F009          	lfsr	2,9
  2662  0015EC  5004               	movf	fputc@fp^0,w,c
  2663  0015EE  26D9               	addwf	fsr2l,f,c
  2664  0015F0  5005               	movf	(fputc@fp+1)^0,w,c
  2665  0015F2  22DA               	addwfc	fsr2h,f,c
  2666  0015F4  EE10 F003          	lfsr	1,3
  2667  0015F8  5004               	movf	fputc@fp^0,w,c
  2668  0015FA  26E1               	addwf	fsr1l,f,c
  2669  0015FC  5005               	movf	(fputc@fp+1)^0,w,c
  2670  0015FE  22E2               	addwfc	fsr1h,f,c
  2671  001600  50DE               	movf	postinc2,w,c
  2672  001602  5CE6               	subwf	postinc1,w,c
  2673  001604  50E6               	movf	postinc1,w,c
  2674  001606  0A80               	xorlw	128
  2675  001608  6E0A               	movwf	(??_fputc+4)^0,c
  2676  00160A  50DE               	movf	postinc2,w,c
  2677  00160C  0A80               	xorlw	128
  2678  00160E  580A               	subwfb	(??_fputc+4)^0,w,c
  2679  001610  B0D8               	btfsc	status,0,c
  2680  001612  EF0D  F00B         	goto	u751
  2681  001616  EF0F  F00B         	goto	u750
  2682  00161A                     u751:
  2683  00161A  EF18  F00B         	goto	l1084
  2684  00161E                     u750:
  2685  00161E                     l1726:
  2686  00161E  EE20 F003          	lfsr	2,3
  2687  001622  5004               	movf	fputc@fp^0,w,c
  2688  001624  26D9               	addwf	fsr2l,f,c
  2689  001626  5005               	movf	(fputc@fp+1)^0,w,c
  2690  001628  22DA               	addwfc	fsr2h,f,c
  2691  00162A  2ADE               	incf	postinc2,f,c
  2692  00162C  0E00               	movlw	0
  2693  00162E  22DD               	addwfc	postdec2,f,c
  2694  001630                     l1084:
  2695  001630  0012               	return		;funcret
  2696  001632                     __end_of_fputc:
  2697                           	callstack 0
  2698                           
  2699 ;; *************** function _putch *****************
  2700 ;; Defined at:
  2701 ;;		line 23 in file "usart_lib.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  data            1    wreg     unsigned char 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  data            1    0[COMRAM] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        1 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 1
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_fputc
  2726 ;;		_UART_print
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text14
  2731  001A0A                     __ptext14:
  2732                           	callstack 0
  2733  001A0A                     _putch:
  2734                           	callstack 25
  2735                           
  2736                           ;incstack = 0
  2737                           ;putch@data stored from wreg
  2738  001A0A  6E01               	movwf	putch@data^0,c
  2739  001A0C                     l145:
  2740                           
  2741                           ;usart_lib.c: 24:     while (!PIR1bits.TXIF)
  2742  001A0C  A89E               	btfss	158,4,c	;volatile
  2743  001A0E  EF0B  F00D         	goto	u711
  2744  001A12  EF0D  F00D         	goto	u710
  2745  001A16                     u711:
  2746  001A16  EF06  F00D         	goto	l145
  2747  001A1A                     u710:
  2748  001A1A                     
  2749                           ;usart_lib.c: 26:     TXREG = data;
  2750  001A1A  C001  FFAD         	movff	putch@data,4013	;volatile
  2751  001A1E  0012               	return		;funcret
  2752  001A20                     __end_of_putch:
  2753                           	callstack 0
  2754                           
  2755 ;; *************** function _abs *****************
  2756 ;; Defined at:
  2757 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  a               2   18[COMRAM] int 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  2   18[COMRAM] int 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2771 ;;      Params:         2       0       0       0       0       0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2773 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2774 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2775 ;;Total ram usage:        4 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 1
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_dtoa
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text15
  2786  001822                     __ptext15:
  2787                           	callstack 0
  2788  001822                     _abs:
  2789                           	callstack 25
  2790  001822  BE14               	btfsc	(abs@a+1)^0,7,c
  2791  001824  EF1E  F00C         	goto	u950
  2792  001828  5014               	movf	(abs@a+1)^0,w,c
  2793  00182A  E106               	bnz	u951
  2794  00182C  0413               	decf	abs@a^0,w,c
  2795  00182E  B0D8               	btfsc	status,0,c
  2796  001830  EF1C  F00C         	goto	u951
  2797  001834  EF1E  F00C         	goto	u950
  2798  001838                     u951:
  2799  001838  EF2C  F00C         	goto	l1069
  2800  00183C                     u950:
  2801  00183C  C013  F015         	movff	abs@a,??_abs
  2802  001840  C014  F016         	movff	abs@a+1,??_abs+1
  2803  001844  1E15               	comf	??_abs^0,f,c
  2804  001846  1E16               	comf	(??_abs+1)^0,f,c
  2805  001848  4A15               	infsnz	??_abs^0,f,c
  2806  00184A  2A16               	incf	(??_abs+1)^0,f,c
  2807  00184C  C015  F013         	movff	??_abs,?_abs
  2808  001850  C016  F014         	movff	??_abs+1,?_abs+1
  2809  001854  EF30  F00C         	goto	l1072
  2810  001858                     l1069:
  2811  001858  C013  F013         	movff	abs@a,?_abs
  2812  00185C  C014  F014         	movff	abs@a+1,?_abs+1
  2813  001860                     l1072:
  2814  001860  0012               	return		;funcret
  2815  001862                     __end_of_abs:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function ___aomod *****************
  2819 ;; Defined at:
  2820 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  dividend        8    0[COMRAM] long long 
  2823 ;;  divisor         8    8[COMRAM] long long 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  sign            1   17[COMRAM] unsigned char 
  2826 ;;  counter         1   16[COMRAM] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  8    0[COMRAM] long long 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2836 ;;      Params:        16       0       0       0       0       0       0       0       0
  2837 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2839 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2840 ;;Total ram usage:       18 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_dtoa
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text16
  2851  001062                     __ptext16:
  2852                           	callstack 0
  2853  001062                     ___aomod:
  2854                           	callstack 25
  2855  001062  0E00               	movlw	0
  2856  001064  6E12               	movwf	___aomod@sign^0,c
  2857  001066  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2858  001068  EF3A  F008         	goto	u850
  2859  00106C  EF38  F008         	goto	u851
  2860  001070                     u851:
  2861  001070  EF4C  F008         	goto	l1800
  2862  001074                     u850:
  2863  001074  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2864  001076  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2865  001078  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2866  00107A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2867  00107C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2868  00107E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2869  001080  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2870  001082  6C01               	negf	___aomod@dividend^0,c
  2871  001084  0E00               	movlw	0
  2872  001086  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2873  001088  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2874  00108A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2875  00108C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2876  00108E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2877  001090  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2878  001092  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2879  001094  0E01               	movlw	1
  2880  001096  6E12               	movwf	___aomod@sign^0,c
  2881  001098                     l1800:
  2882  001098  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2883  00109A  EF53  F008         	goto	u860
  2884  00109E  EF51  F008         	goto	u861
  2885  0010A2                     u861:
  2886  0010A2  EF63  F008         	goto	l1804
  2887  0010A6                     u860:
  2888  0010A6  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2889  0010A8  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2890  0010AA  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2891  0010AC  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2892  0010AE  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2893  0010B0  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2894  0010B2  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2895  0010B4  6C09               	negf	___aomod@divisor^0,c
  2896  0010B6  0E00               	movlw	0
  2897  0010B8  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2898  0010BA  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2899  0010BC  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2900  0010BE  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2901  0010C0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2902  0010C2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2903  0010C4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2904  0010C6                     l1804:
  2905  0010C6  5009               	movf	___aomod@divisor^0,w,c
  2906  0010C8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2907  0010CA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2908  0010CC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2909  0010CE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2910  0010D0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2911  0010D2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2912  0010D4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2913  0010D6  B4D8               	btfsc	status,2,c
  2914  0010D8  EF70  F008         	goto	u871
  2915  0010DC  EF72  F008         	goto	u870
  2916  0010E0                     u871:
  2917  0010E0  EFBA  F008         	goto	l1820
  2918  0010E4                     u870:
  2919  0010E4  0E01               	movlw	1
  2920  0010E6  6E11               	movwf	___aomod@counter^0,c
  2921  0010E8  EF80  F008         	goto	l1810
  2922  0010EC                     l1808:
  2923  0010EC  90D8               	bcf	status,0,c
  2924  0010EE  3609               	rlcf	___aomod@divisor^0,f,c
  2925  0010F0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2926  0010F2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2927  0010F4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2928  0010F6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2929  0010F8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2930  0010FA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2931  0010FC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2932  0010FE  2A11               	incf	___aomod@counter^0,f,c
  2933  001100                     l1810:
  2934  001100  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2935  001102  EF85  F008         	goto	u881
  2936  001106  EF87  F008         	goto	u880
  2937  00110A                     u881:
  2938  00110A  EF76  F008         	goto	l1808
  2939  00110E                     u880:
  2940  00110E                     l1812:
  2941  00110E  5009               	movf	___aomod@divisor^0,w,c
  2942  001110  5C01               	subwf	___aomod@dividend^0,w,c
  2943  001112  500A               	movf	(___aomod@divisor+1)^0,w,c
  2944  001114  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2945  001116  500B               	movf	(___aomod@divisor+2)^0,w,c
  2946  001118  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2947  00111A  500C               	movf	(___aomod@divisor+3)^0,w,c
  2948  00111C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2949  00111E  500D               	movf	(___aomod@divisor+4)^0,w,c
  2950  001120  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2951  001122  500E               	movf	(___aomod@divisor+5)^0,w,c
  2952  001124  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2953  001126  500F               	movf	(___aomod@divisor+6)^0,w,c
  2954  001128  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2955  00112A  5010               	movf	(___aomod@divisor+7)^0,w,c
  2956  00112C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2957  00112E  A0D8               	btfss	status,0,c
  2958  001130  EF9C  F008         	goto	u891
  2959  001134  EF9E  F008         	goto	u890
  2960  001138                     u891:
  2961  001138  EFAE  F008         	goto	l1816
  2962  00113C                     u890:
  2963  00113C  5009               	movf	___aomod@divisor^0,w,c
  2964  00113E  5E01               	subwf	___aomod@dividend^0,f,c
  2965  001140  500A               	movf	(___aomod@divisor+1)^0,w,c
  2966  001142  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2967  001144  500B               	movf	(___aomod@divisor+2)^0,w,c
  2968  001146  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2969  001148  500C               	movf	(___aomod@divisor+3)^0,w,c
  2970  00114A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2971  00114C  500D               	movf	(___aomod@divisor+4)^0,w,c
  2972  00114E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2973  001150  500E               	movf	(___aomod@divisor+5)^0,w,c
  2974  001152  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2975  001154  500F               	movf	(___aomod@divisor+6)^0,w,c
  2976  001156  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2977  001158  5010               	movf	(___aomod@divisor+7)^0,w,c
  2978  00115A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2979  00115C                     l1816:
  2980  00115C  90D8               	bcf	status,0,c
  2981  00115E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2982  001160  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2983  001162  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2984  001164  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2985  001166  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2986  001168  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2987  00116A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2988  00116C  3209               	rrcf	___aomod@divisor^0,f,c
  2989  00116E  2E11               	decfsz	___aomod@counter^0,f,c
  2990  001170  EF87  F008         	goto	l1812
  2991  001174                     l1820:
  2992  001174  5012               	movf	___aomod@sign^0,w,c
  2993  001176  B4D8               	btfsc	status,2,c
  2994  001178  EFC0  F008         	goto	u901
  2995  00117C  EFC2  F008         	goto	u900
  2996  001180                     u901:
  2997  001180  EFD2  F008         	goto	l1824
  2998  001184                     u900:
  2999  001184  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3000  001186  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3001  001188  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3002  00118A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3003  00118C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3004  00118E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3005  001190  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3006  001192  6C01               	negf	___aomod@dividend^0,c
  3007  001194  0E00               	movlw	0
  3008  001196  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3009  001198  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3010  00119A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3011  00119C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3012  00119E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3013  0011A0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3014  0011A2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3015  0011A4                     l1824:
  3016  0011A4  C001  F001         	movff	___aomod@dividend,?___aomod
  3017  0011A8  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3018  0011AC  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3019  0011B0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3020  0011B4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3021  0011B8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3022  0011BC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3023  0011C0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3024  0011C4  0012               	return		;funcret
  3025  0011C6                     __end_of___aomod:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function ___aodiv *****************
  3029 ;; Defined at:
  3030 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  dividend        8    0[COMRAM] long long 
  3033 ;;  divisor         8    8[COMRAM] long long 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  quotient        8   18[COMRAM] long long 
  3036 ;;  sign            1   17[COMRAM] unsigned char 
  3037 ;;  counter         1   16[COMRAM] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  8    0[COMRAM] long long 
  3040 ;; Registers used:
  3041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3047 ;;      Params:        16       0       0       0       0       0       0       0       0
  3048 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3050 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3051 ;;Total ram usage:       26 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 1
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_dtoa
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text17
  3062  000EDA                     __ptext17:
  3063                           	callstack 0
  3064  000EDA                     ___aodiv:
  3065                           	callstack 25
  3066  000EDA  0E00               	movlw	0
  3067  000EDC  6E12               	movwf	___aodiv@sign^0,c
  3068  000EDE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3069  000EE0  EF76  F007         	goto	u780
  3070  000EE4  EF74  F007         	goto	u781
  3071  000EE8                     u781:
  3072  000EE8  EF88  F007         	goto	l1756
  3073  000EEC                     u780:
  3074  000EEC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3075  000EEE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3076  000EF0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3077  000EF2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3078  000EF4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3079  000EF6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3080  000EF8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3081  000EFA  6C09               	negf	___aodiv@divisor^0,c
  3082  000EFC  0E00               	movlw	0
  3083  000EFE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3084  000F00  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3085  000F02  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3086  000F04  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3087  000F06  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3088  000F08  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3089  000F0A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3090  000F0C  0E01               	movlw	1
  3091  000F0E  6E12               	movwf	___aodiv@sign^0,c
  3092  000F10                     l1756:
  3093  000F10  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3094  000F12  EF8F  F007         	goto	u790
  3095  000F16  EF8D  F007         	goto	u791
  3096  000F1A                     u791:
  3097  000F1A  EFA1  F007         	goto	l1762
  3098  000F1E                     u790:
  3099  000F1E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3100  000F20  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3101  000F22  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3102  000F24  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3103  000F26  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3104  000F28  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3105  000F2A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3106  000F2C  6C01               	negf	___aodiv@dividend^0,c
  3107  000F2E  0E00               	movlw	0
  3108  000F30  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3109  000F32  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3110  000F34  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3111  000F36  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3112  000F38  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3113  000F3A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3114  000F3C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3115  000F3E  0E01               	movlw	1
  3116  000F40  1A12               	xorwf	___aodiv@sign^0,f,c
  3117  000F42                     l1762:
  3118  000F42  EE20  F013         	lfsr	2,___aodiv@quotient
  3119  000F46  0E07               	movlw	7
  3120  000F48                     u801:
  3121  000F48  6ADE               	clrf	postinc2,c
  3122  000F4A  06E8               	decf	wreg,f,c
  3123  000F4C  E2FD               	bc	u801
  3124  000F4E  5009               	movf	___aodiv@divisor^0,w,c
  3125  000F50  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3126  000F52  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3127  000F54  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3128  000F56  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3129  000F58  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3130  000F5A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3131  000F5C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3132  000F5E  B4D8               	btfsc	status,2,c
  3133  000F60  EFB4  F007         	goto	u811
  3134  000F64  EFB6  F007         	goto	u810
  3135  000F68                     u811:
  3136  000F68  EF08  F008         	goto	l1784
  3137  000F6C                     u810:
  3138  000F6C  0E01               	movlw	1
  3139  000F6E  6E11               	movwf	___aodiv@counter^0,c
  3140  000F70  EFC4  F007         	goto	l1770
  3141  000F74                     l1768:
  3142  000F74  90D8               	bcf	status,0,c
  3143  000F76  3609               	rlcf	___aodiv@divisor^0,f,c
  3144  000F78  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3145  000F7A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3146  000F7C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3147  000F7E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3148  000F80  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3149  000F82  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3150  000F84  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3151  000F86  2A11               	incf	___aodiv@counter^0,f,c
  3152  000F88                     l1770:
  3153  000F88  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3154  000F8A  EFC9  F007         	goto	u821
  3155  000F8E  EFCB  F007         	goto	u820
  3156  000F92                     u821:
  3157  000F92  EFBA  F007         	goto	l1768
  3158  000F96                     u820:
  3159  000F96                     l1772:
  3160  000F96  90D8               	bcf	status,0,c
  3161  000F98  3613               	rlcf	___aodiv@quotient^0,f,c
  3162  000F9A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3163  000F9C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3164  000F9E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3165  000FA0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3166  000FA2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3167  000FA4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3168  000FA6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3169  000FA8  5009               	movf	___aodiv@divisor^0,w,c
  3170  000FAA  5C01               	subwf	___aodiv@dividend^0,w,c
  3171  000FAC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3172  000FAE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3173  000FB0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3174  000FB2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3175  000FB4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3176  000FB6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3177  000FB8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3178  000FBA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3179  000FBC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3180  000FBE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3181  000FC0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3182  000FC2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3183  000FC4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3184  000FC6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3185  000FC8  A0D8               	btfss	status,0,c
  3186  000FCA  EFE9  F007         	goto	u831
  3187  000FCE  EFEB  F007         	goto	u830
  3188  000FD2                     u831:
  3189  000FD2  EFFC  F007         	goto	l1780
  3190  000FD6                     u830:
  3191  000FD6  5009               	movf	___aodiv@divisor^0,w,c
  3192  000FD8  5E01               	subwf	___aodiv@dividend^0,f,c
  3193  000FDA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3194  000FDC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3195  000FDE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3196  000FE0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3197  000FE2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3198  000FE4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3199  000FE6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3200  000FE8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3201  000FEA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3202  000FEC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3203  000FEE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3204  000FF0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3205  000FF2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3206  000FF4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3207  000FF6  8013               	bsf	___aodiv@quotient^0,0,c
  3208  000FF8                     l1780:
  3209  000FF8  90D8               	bcf	status,0,c
  3210  000FFA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3211  000FFC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3212  000FFE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3213  001000  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3214  001002  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3215  001004  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3216  001006  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3217  001008  3209               	rrcf	___aodiv@divisor^0,f,c
  3218  00100A  2E11               	decfsz	___aodiv@counter^0,f,c
  3219  00100C  EFCB  F007         	goto	l1772
  3220  001010                     l1784:
  3221  001010  5012               	movf	___aodiv@sign^0,w,c
  3222  001012  B4D8               	btfsc	status,2,c
  3223  001014  EF0E  F008         	goto	u841
  3224  001018  EF10  F008         	goto	u840
  3225  00101C                     u841:
  3226  00101C  EF20  F008         	goto	l1788
  3227  001020                     u840:
  3228  001020  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3229  001022  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3230  001024  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3231  001026  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3232  001028  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3233  00102A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3234  00102C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3235  00102E  6C13               	negf	___aodiv@quotient^0,c
  3236  001030  0E00               	movlw	0
  3237  001032  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3238  001034  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3239  001036  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3240  001038  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3241  00103A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3242  00103C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3243  00103E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3244  001040                     l1788:
  3245  001040  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3246  001044  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3247  001048  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3248  00104C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3249  001050  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3250  001054  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3251  001058  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3252  00105C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3253  001060  0012               	return		;funcret
  3254  001062                     __end_of___aodiv:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _intosc_init *****************
  3258 ;; Defined at:
  3259 ;;		line 3 in file "intosc_lib.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3273 ;;      Params:         0       0       0       0       0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text18
  3288  001A52                     __ptext18:
  3289                           	callstack 0
  3290  001A52                     _intosc_init:
  3291                           	callstack 29
  3292  001A52                     
  3293                           ;intosc_lib.c: 8:     OSCCONbits.IRCF = 0b111;
  3294  001A52  0E70               	movlw	112
  3295  001A54  12D3               	iorwf	211,f,c	;volatile
  3296  001A56                     
  3297                           ;intosc_lib.c: 9:     OSCCONbits.IOFS = 1;
  3298  001A56  84D3               	bsf	211,2,c	;volatile
  3299                           
  3300                           ;intosc_lib.c: 10:     OSCCONbits.SCS = 0b11;
  3301  001A58  0E03               	movlw	3
  3302  001A5A  12D3               	iorwf	211,f,c	;volatile
  3303  001A5C  0012               	return		;funcret
  3304  001A5E                     __end_of_intosc_init:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function _atoi *****************
  3308 ;; Defined at:
  3309 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  s               2    7[COMRAM] PTR const unsigned char 
  3312 ;;		 -> string_pwm_motor(5), string_pwm_led(5), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  n               2   15[COMRAM] int 
  3315 ;;  neg             2   13[COMRAM] int 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  2    7[COMRAM] int 
  3318 ;; Registers used:
  3319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3325 ;;      Params:         2       0       0       0       0       0       0       0       0
  3326 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3327 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3328 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3329 ;;Total ram usage:       10 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 2
  3332 ;; This function calls:
  3333 ;;		___wmul
  3334 ;;		_isdigit
  3335 ;;		_isspace
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text19
  3342  0011C6                     __ptext19:
  3343                           	callstack 0
  3344  0011C6                     _atoi:
  3345                           	callstack 28
  3346  0011C6  0E00               	movlw	0
  3347  0011C8  6E11               	movwf	(atoi@n+1)^0,c
  3348  0011CA  0E00               	movlw	0
  3349  0011CC  6E10               	movwf	atoi@n^0,c
  3350  0011CE  0E00               	movlw	0
  3351  0011D0  6E0F               	movwf	(atoi@neg+1)^0,c
  3352  0011D2  0E00               	movlw	0
  3353  0011D4  6E0E               	movwf	atoi@neg^0,c
  3354  0011D6  EFEF  F008         	goto	l2182
  3355  0011DA                     l2178:
  3356  0011DA  4A08               	infsnz	atoi@s^0,f,c
  3357  0011DC  2A09               	incf	(atoi@s+1)^0,f,c
  3358  0011DE                     l2182:
  3359  0011DE  C008  FFD9         	movff	atoi@s,fsr2l
  3360  0011E2  C009  FFDA         	movff	atoi@s+1,fsr2h
  3361  0011E6  0E20               	movlw	32
  3362  0011E8  18DE               	xorwf	postinc2,w,c
  3363  0011EA  B4D8               	btfsc	status,2,c
  3364  0011EC  EFFA  F008         	goto	u1321
  3365  0011F0  EFFC  F008         	goto	u1320
  3366  0011F4                     u1321:
  3367  0011F4  EFED  F008         	goto	l2178
  3368  0011F8                     u1320:
  3369  0011F8  0EF7               	movlw	247
  3370  0011FA  6E0A               	movwf	??_atoi^0,c
  3371  0011FC  0EFF               	movlw	255
  3372  0011FE  6E0B               	movwf	(??_atoi+1)^0,c
  3373  001200  C008  FFD9         	movff	atoi@s,fsr2l
  3374  001204  C009  FFDA         	movff	atoi@s+1,fsr2h
  3375  001208  50DF               	movf	indf2,w,c
  3376  00120A  6E0C               	movwf	(??_atoi+2)^0,c
  3377  00120C  6A0D               	clrf	(??_atoi+3)^0,c
  3378  00120E  500A               	movf	??_atoi^0,w,c
  3379  001210  260C               	addwf	(??_atoi+2)^0,f,c
  3380  001212  500B               	movf	(??_atoi+1)^0,w,c
  3381  001214  220D               	addwfc	(??_atoi+3)^0,f,c
  3382  001216  500D               	movf	(??_atoi+3)^0,w,c
  3383  001218  E109               	bnz	u1330
  3384  00121A  0E05               	movlw	5
  3385  00121C  5C0C               	subwf	(??_atoi+2)^0,w,c
  3386  00121E  A0D8               	btfss	status,0,c
  3387  001220  EF14  F009         	goto	u1331
  3388  001224  EF16  F009         	goto	u1330
  3389  001228                     u1331:
  3390  001228  EFED  F008         	goto	l2178
  3391  00122C                     u1330:
  3392  00122C  EF20  F009         	goto	l2190
  3393  001230                     l2186:
  3394  001230  0E00               	movlw	0
  3395  001232  6E0F               	movwf	(atoi@neg+1)^0,c
  3396  001234  0E01               	movlw	1
  3397  001236  6E0E               	movwf	atoi@neg^0,c
  3398  001238                     l2188:
  3399  001238  4A08               	infsnz	atoi@s^0,f,c
  3400  00123A  2A09               	incf	(atoi@s+1)^0,f,c
  3401  00123C  EF55  F009         	goto	l2198
  3402  001240                     l2190:
  3403  001240  C008  FFD9         	movff	atoi@s,fsr2l
  3404  001244  C009  FFDA         	movff	atoi@s+1,fsr2h
  3405  001248  50DF               	movf	indf2,w,c
  3406  00124A  6E0A               	movwf	??_atoi^0,c
  3407  00124C  6A0B               	clrf	(??_atoi+1)^0,c
  3408                           
  3409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3410                           ; Switch size 1, requested type "simple"
  3411                           ; Number of cases is 1, Range of values is 0 to 0
  3412                           ; switch strategies available:
  3413                           ; Name         Instructions Cycles
  3414                           ; simple_byte            4     3 (average)
  3415                           ;	Chosen strategy is simple_byte
  3416  00124E  500B               	movf	(??_atoi+1)^0,w,c
  3417  001250  0A00               	xorlw	0	; case 0
  3418  001252  B4D8               	btfsc	status,2,c
  3419  001254  EF2E  F009         	goto	l2358
  3420  001258  EF55  F009         	goto	l2198
  3421  00125C                     l2358:
  3422                           
  3423                           ; Switch size 1, requested type "simple"
  3424                           ; Number of cases is 2, Range of values is 43 to 45
  3425                           ; switch strategies available:
  3426                           ; Name         Instructions Cycles
  3427                           ; simple_byte            7     4 (average)
  3428                           ;	Chosen strategy is simple_byte
  3429  00125C  500A               	movf	??_atoi^0,w,c
  3430  00125E  0A2B               	xorlw	43	; case 43
  3431  001260  B4D8               	btfsc	status,2,c
  3432  001262  EF1C  F009         	goto	l2188
  3433  001266  0A06               	xorlw	6	; case 45
  3434  001268  B4D8               	btfsc	status,2,c
  3435  00126A  EF18  F009         	goto	l2186
  3436  00126E  EF55  F009         	goto	l2198
  3437  001272                     l2192:
  3438  001272  C010  F001         	movff	atoi@n,___wmul@multiplier
  3439  001276  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3440  00127A  0E00               	movlw	0
  3441  00127C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3442  00127E  0E0A               	movlw	10
  3443  001280  6E03               	movwf	___wmul@multiplicand^0,c
  3444  001282  ECB5  F00C         	call	___wmul	;wreg free
  3445  001286  C008  FFD9         	movff	atoi@s,fsr2l
  3446  00128A  C009  FFDA         	movff	atoi@s+1,fsr2h
  3447  00128E  50DF               	movf	indf2,w,c
  3448  001290  6E0A               	movwf	??_atoi^0,c
  3449  001292  500A               	movf	??_atoi^0,w,c
  3450  001294  5E01               	subwf	?___wmul^0,f,c
  3451  001296  0E00               	movlw	0
  3452  001298  5A02               	subwfb	(?___wmul+1)^0,f,c
  3453  00129A  0E30               	movlw	48
  3454  00129C  2401               	addwf	?___wmul^0,w,c
  3455  00129E  6E10               	movwf	atoi@n^0,c
  3456  0012A0  0E00               	movlw	0
  3457  0012A2  2002               	addwfc	(?___wmul+1)^0,w,c
  3458  0012A4  6E11               	movwf	(atoi@n+1)^0,c
  3459  0012A6  EF1C  F009         	goto	l2188
  3460  0012AA                     l2198:
  3461  0012AA  0ED0               	movlw	208
  3462  0012AC  6E0A               	movwf	??_atoi^0,c
  3463  0012AE  0EFF               	movlw	255
  3464  0012B0  6E0B               	movwf	(??_atoi+1)^0,c
  3465  0012B2  C008  FFD9         	movff	atoi@s,fsr2l
  3466  0012B6  C009  FFDA         	movff	atoi@s+1,fsr2h
  3467  0012BA  50DF               	movf	indf2,w,c
  3468  0012BC  6E0C               	movwf	(??_atoi+2)^0,c
  3469  0012BE  6A0D               	clrf	(??_atoi+3)^0,c
  3470  0012C0  500A               	movf	??_atoi^0,w,c
  3471  0012C2  260C               	addwf	(??_atoi+2)^0,f,c
  3472  0012C4  500B               	movf	(??_atoi+1)^0,w,c
  3473  0012C6  220D               	addwfc	(??_atoi+3)^0,f,c
  3474  0012C8  500D               	movf	(??_atoi+3)^0,w,c
  3475  0012CA  E109               	bnz	u1340
  3476  0012CC  0E0A               	movlw	10
  3477  0012CE  5C0C               	subwf	(??_atoi+2)^0,w,c
  3478  0012D0  A0D8               	btfss	status,0,c
  3479  0012D2  EF6D  F009         	goto	u1341
  3480  0012D6  EF6F  F009         	goto	u1340
  3481  0012DA                     u1341:
  3482  0012DA  EF39  F009         	goto	l2192
  3483  0012DE                     u1340:
  3484  0012DE  500E               	movf	atoi@neg^0,w,c
  3485  0012E0  100F               	iorwf	(atoi@neg+1)^0,w,c
  3486  0012E2  A4D8               	btfss	status,2,c
  3487  0012E4  EF76  F009         	goto	u1351
  3488  0012E8  EF78  F009         	goto	u1350
  3489  0012EC                     u1351:
  3490  0012EC  EF86  F009         	goto	l969
  3491  0012F0                     u1350:
  3492  0012F0  C010  F00A         	movff	atoi@n,??_atoi
  3493  0012F4  C011  F00B         	movff	atoi@n+1,??_atoi+1
  3494  0012F8  1E0A               	comf	??_atoi^0,f,c
  3495  0012FA  1E0B               	comf	(??_atoi+1)^0,f,c
  3496  0012FC  4A0A               	infsnz	??_atoi^0,f,c
  3497  0012FE  2A0B               	incf	(??_atoi+1)^0,f,c
  3498  001300  C00A  F008         	movff	??_atoi,?_atoi
  3499  001304  C00B  F009         	movff	??_atoi+1,?_atoi+1
  3500  001308  EF8A  F009         	goto	l972
  3501  00130C                     l969:
  3502  00130C  C010  F008         	movff	atoi@n,?_atoi
  3503  001310  C011  F009         	movff	atoi@n+1,?_atoi+1
  3504  001314                     l972:
  3505  001314  0012               	return		;funcret
  3506  001316                     __end_of_atoi:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _isspace *****************
  3510 ;; Defined at:
  3511 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  c               2    0[COMRAM] int 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  2    0[COMRAM] int 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3525 ;;      Params:         2       0       0       0       0       0       0       0       0
  3526 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3527 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3528 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3529 ;;Total ram usage:        7 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 1
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_atoi
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text20
  3540  001704                     __ptext20:
  3541                           	callstack 0
  3542  001704                     _isspace:
  3543                           	callstack 28
  3544  001704  0E01               	movlw	1
  3545  001706  6E07               	movwf	_isspace$1553^0,c
  3546  001708  0E20               	movlw	32
  3547  00170A  1801               	xorwf	isspace@c^0,w,c
  3548  00170C  1002               	iorwf	(isspace@c+1)^0,w,c
  3549  00170E  B4D8               	btfsc	status,2,c
  3550  001710  EF8C  F00B         	goto	u1231
  3551  001714  EF8E  F00B         	goto	u1230
  3552  001718                     u1231:
  3553  001718  EFA7  F00B         	goto	l2024
  3554  00171C                     u1230:
  3555  00171C  0EF7               	movlw	247
  3556  00171E  6E03               	movwf	??_isspace^0,c
  3557  001720  0EFF               	movlw	255
  3558  001722  6E04               	movwf	(??_isspace+1)^0,c
  3559  001724  C001  F005         	movff	isspace@c,??_isspace+2
  3560  001728  C002  F006         	movff	isspace@c+1,??_isspace+3
  3561  00172C  5003               	movf	??_isspace^0,w,c
  3562  00172E  2605               	addwf	(??_isspace+2)^0,f,c
  3563  001730  5004               	movf	(??_isspace+1)^0,w,c
  3564  001732  2206               	addwfc	(??_isspace+3)^0,f,c
  3565  001734  5006               	movf	(??_isspace+3)^0,w,c
  3566  001736  E109               	bnz	u1240
  3567  001738  0E05               	movlw	5
  3568  00173A  5C05               	subwf	(??_isspace+2)^0,w,c
  3569  00173C  A0D8               	btfss	status,0,c
  3570  00173E  EFA3  F00B         	goto	u1241
  3571  001742  EFA5  F00B         	goto	u1240
  3572  001746                     u1241:
  3573  001746  EFA7  F00B         	goto	l2024
  3574  00174A                     u1240:
  3575  00174A  0E00               	movlw	0
  3576  00174C  6E07               	movwf	_isspace$1553^0,c
  3577  00174E                     l2024:
  3578  00174E  C007  F001         	movff	_isspace$1553,?_isspace
  3579  001752  6A02               	clrf	(?_isspace+1)^0,c
  3580  001754  0012               	return		;funcret
  3581  001756                     __end_of_isspace:
  3582                           	callstack 0
  3583                           
  3584 ;; *************** function _isdigit *****************
  3585 ;; Defined at:
  3586 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  c               2    0[COMRAM] int 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  2    0[COMRAM] int 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3600 ;;      Params:         2       0       0       0       0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3602 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3603 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3604 ;;Total ram usage:        6 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; Hardware stack levels required when called: 1
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_atoi
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text21
  3615  00189E                     __ptext21:
  3616                           	callstack 0
  3617  00189E                     _isdigit:
  3618                           	callstack 28
  3619  00189E  0ED0               	movlw	208
  3620  0018A0  6E03               	movwf	??_isdigit^0,c
  3621  0018A2  0EFF               	movlw	255
  3622  0018A4  6E04               	movwf	(??_isdigit+1)^0,c
  3623  0018A6  C001  F005         	movff	isdigit@c,??_isdigit+2
  3624  0018AA  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  3625  0018AE  5003               	movf	??_isdigit^0,w,c
  3626  0018B0  2605               	addwf	(??_isdigit+2)^0,f,c
  3627  0018B2  5004               	movf	(??_isdigit+1)^0,w,c
  3628  0018B4  2206               	addwfc	(??_isdigit+3)^0,f,c
  3629  0018B6  5006               	movf	(??_isdigit+3)^0,w,c
  3630  0018B8  E10A               	bnz	u1250
  3631  0018BA  0E0A               	movlw	10
  3632  0018BC  5C05               	subwf	(??_isdigit+2)^0,w,c
  3633  0018BE  A0D8               	btfss	status,0,c
  3634  0018C0  EF64  F00C         	goto	u1251
  3635  0018C4  EF67  F00C         	goto	u1250
  3636  0018C8                     u1251:
  3637  0018C8  0E01               	movlw	1
  3638  0018CA  EF68  F00C         	goto	u1260
  3639  0018CE                     u1250:
  3640  0018CE  0E00               	movlw	0
  3641  0018D0                     u1260:
  3642  0018D0  6E01               	movwf	?_isdigit^0,c
  3643  0018D2  6A02               	clrf	(?_isdigit+1)^0,c
  3644  0018D4  0012               	return		;funcret
  3645  0018D6                     __end_of_isdigit:
  3646                           	callstack 0
  3647                           
  3648 ;; *************** function ___wmul *****************
  3649 ;; Defined at:
  3650 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  multiplier      2    0[COMRAM] unsigned int 
  3653 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  product         2    4[COMRAM] unsigned int 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  2    0[COMRAM] unsigned int 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0, prodl, prodh
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3665 ;;      Params:         4       0       0       0       0       0       0       0       0
  3666 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3668 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3669 ;;Total ram usage:        6 bytes
  3670 ;; Hardware stack levels used: 1
  3671 ;; Hardware stack levels required when called: 1
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_atoi
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text22
  3680  00196A                     __ptext22:
  3681                           	callstack 0
  3682  00196A                     ___wmul:
  3683                           	callstack 28
  3684  00196A  5001               	movf	___wmul@multiplier^0,w,c
  3685  00196C  0203               	mulwf	___wmul@multiplicand^0,c
  3686  00196E  CFF3 F005          	movff	prodl,___wmul@product
  3687  001972  CFF4 F006          	movff	prodh,___wmul@product+1
  3688  001976  5001               	movf	___wmul@multiplier^0,w,c
  3689  001978  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3690  00197A  50F3               	movf	243,w,c
  3691  00197C  2606               	addwf	(___wmul@product+1)^0,f,c
  3692  00197E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3693  001980  0203               	mulwf	___wmul@multiplicand^0,c
  3694  001982  50F3               	movf	243,w,c
  3695  001984  2606               	addwf	(___wmul@product+1)^0,f,c
  3696  001986  C005  F001         	movff	___wmul@product,?___wmul
  3697  00198A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3698  00198E  0012               	return		;funcret
  3699  001990                     __end_of___wmul:
  3700                           	callstack 0
  3701                           
  3702 ;; *************** function _USART_init *****************
  3703 ;; Defined at:
  3704 ;;		line 3 in file "usart_lib.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  BAUD            4   14[COMRAM] long 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3718 ;;      Params:         4       0       0       0       0       0       0       0       0
  3719 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3721 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3722 ;;Total ram usage:        8 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; Hardware stack levels required when called: 2
  3725 ;; This function calls:
  3726 ;;		___aldiv
  3727 ;; This function is called by:
  3728 ;;		_main
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text23
  3733  001632                     __ptext23:
  3734                           	callstack 0
  3735  001632                     _USART_init:
  3736                           	callstack 28
  3737  001632                     
  3738                           ;usart_lib.c: 5:     TRISCbits.RC6 = 0;
  3739  001632  9C94               	bcf	148,6,c	;volatile
  3740                           
  3741                           ;usart_lib.c: 6:     TRISCbits.RC7 = 1;
  3742  001634  8E94               	bsf	148,7,c	;volatile
  3743  001636                     
  3744                           ;usart_lib.c: 9:     SPBRG = (unsigned char)(((8000000L/BAUD)/64)-1);
  3745  001636  C00F  F005         	movff	USART_init@BAUD,___aldiv@divisor
  3746  00163A  C010  F006         	movff	USART_init@BAUD+1,___aldiv@divisor+1
  3747  00163E  C011  F007         	movff	USART_init@BAUD+2,___aldiv@divisor+2
  3748  001642  C012  F008         	movff	USART_init@BAUD+3,___aldiv@divisor+3
  3749  001646  0E00               	movlw	0
  3750  001648  6E01               	movwf	___aldiv@dividend^0,c
  3751  00164A  0E12               	movlw	18
  3752  00164C  6E02               	movwf	(___aldiv@dividend+1)^0,c
  3753  00164E  0E7A               	movlw	122
  3754  001650  6E03               	movwf	(___aldiv@dividend+2)^0,c
  3755  001652  0E00               	movlw	0
  3756  001654  6E04               	movwf	(___aldiv@dividend+3)^0,c
  3757  001656  EC8B  F009         	call	___aldiv	;wreg free
  3758  00165A  C001  F013         	movff	?___aldiv,_USART_init$1881
  3759  00165E  C002  F014         	movff	?___aldiv+1,_USART_init$1881+1
  3760  001662  C003  F015         	movff	?___aldiv+2,_USART_init$1881+2
  3761  001666  C004  F016         	movff	?___aldiv+3,_USART_init$1881+3
  3762                           
  3763                           ;usart_lib.c: 9:     SPBRG = (unsigned char)(((8000000L/BAUD)/64)-1);
  3764  00166A  C013  F001         	movff	_USART_init$1881,___aldiv@dividend
  3765  00166E  C014  F002         	movff	_USART_init$1881+1,___aldiv@dividend+1
  3766  001672  C015  F003         	movff	_USART_init$1881+2,___aldiv@dividend+2
  3767  001676  C016  F004         	movff	_USART_init$1881+3,___aldiv@dividend+3
  3768  00167A  0E40               	movlw	64
  3769  00167C  6E05               	movwf	___aldiv@divisor^0,c
  3770  00167E  0E00               	movlw	0
  3771  001680  6E06               	movwf	(___aldiv@divisor+1)^0,c
  3772  001682  0E00               	movlw	0
  3773  001684  6E07               	movwf	(___aldiv@divisor+2)^0,c
  3774  001686  0E00               	movlw	0
  3775  001688  6E08               	movwf	(___aldiv@divisor+3)^0,c
  3776  00168A  EC8B  F009         	call	___aldiv	;wreg free
  3777  00168E  0401               	decf	?___aldiv^0,w,c
  3778  001690  6EAF               	movwf	175,c	;volatile
  3779  001692                     
  3780                           ;usart_lib.c: 12:     TXSTAbits.BRGH = 0;
  3781  001692  94AC               	bcf	172,2,c	;volatile
  3782  001694                     
  3783                           ;usart_lib.c: 13:     TXSTAbits.SYNC = 0;
  3784  001694  98AC               	bcf	172,4,c	;volatile
  3785  001696                     
  3786                           ;usart_lib.c: 14:     RCSTAbits.SPEN = 1;
  3787  001696  8EAB               	bsf	171,7,c	;volatile
  3788  001698                     
  3789                           ;usart_lib.c: 15:     TXSTAbits.TXEN = 1;
  3790  001698  8AAC               	bsf	172,5,c	;volatile
  3791  00169A                     
  3792                           ;usart_lib.c: 17:     TXSTAbits.TX9 = 0;
  3793  00169A  9CAC               	bcf	172,6,c	;volatile
  3794  00169C                     
  3795                           ;usart_lib.c: 19:     RCSTAbits.RC9 = 0;
  3796  00169C  9CAB               	bcf	171,6,c	;volatile
  3797  00169E                     
  3798                           ;usart_lib.c: 20:     RCSTAbits.CREN = 1;
  3799  00169E  88AB               	bsf	171,4,c	;volatile
  3800  0016A0  0012               	return		;funcret
  3801  0016A2                     __end_of_USART_init:
  3802                           	callstack 0
  3803                           
  3804 ;; *************** function ___aldiv *****************
  3805 ;; Defined at:
  3806 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  dividend        4    0[COMRAM] long 
  3809 ;;  divisor         4    4[COMRAM] long 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  quotient        4   10[COMRAM] long 
  3812 ;;  sign            1    9[COMRAM] unsigned char 
  3813 ;;  counter         1    8[COMRAM] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  4    0[COMRAM] long 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3823 ;;      Params:         8       0       0       0       0       0       0       0       0
  3824 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3826 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3827 ;;Total ram usage:       14 bytes
  3828 ;; Hardware stack levels used: 1
  3829 ;; Hardware stack levels required when called: 1
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_USART_init
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text24
  3838  001316                     __ptext24:
  3839                           	callstack 0
  3840  001316                     ___aldiv:
  3841                           	callstack 28
  3842  001316  0E00               	movlw	0
  3843  001318  6E0A               	movwf	___aldiv@sign^0,c
  3844  00131A  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  3845  00131C  EF94  F009         	goto	u1170
  3846  001320  EF92  F009         	goto	u1171
  3847  001324                     u1171:
  3848  001324  EF9E  F009         	goto	l1980
  3849  001328                     u1170:
  3850  001328  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  3851  00132A  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  3852  00132C  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  3853  00132E  6C05               	negf	___aldiv@divisor^0,c
  3854  001330  0E00               	movlw	0
  3855  001332  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  3856  001334  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  3857  001336  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  3858  001338  0E01               	movlw	1
  3859  00133A  6E0A               	movwf	___aldiv@sign^0,c
  3860  00133C                     l1980:
  3861  00133C  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  3862  00133E  EFA5  F009         	goto	u1180
  3863  001342  EFA3  F009         	goto	u1181
  3864  001346                     u1181:
  3865  001346  EFAF  F009         	goto	l1986
  3866  00134A                     u1180:
  3867  00134A  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  3868  00134C  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  3869  00134E  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  3870  001350  6C01               	negf	___aldiv@dividend^0,c
  3871  001352  0E00               	movlw	0
  3872  001354  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  3873  001356  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  3874  001358  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  3875  00135A  0E01               	movlw	1
  3876  00135C  1A0A               	xorwf	___aldiv@sign^0,f,c
  3877  00135E                     l1986:
  3878  00135E  0E00               	movlw	0
  3879  001360  6E0B               	movwf	___aldiv@quotient^0,c
  3880  001362  0E00               	movlw	0
  3881  001364  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  3882  001366  0E00               	movlw	0
  3883  001368  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  3884  00136A  0E00               	movlw	0
  3885  00136C  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  3886  00136E  5005               	movf	___aldiv@divisor^0,w,c
  3887  001370  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  3888  001372  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  3889  001374  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  3890  001376  B4D8               	btfsc	status,2,c
  3891  001378  EFC0  F009         	goto	u1191
  3892  00137C  EFC2  F009         	goto	u1190
  3893  001380                     u1191:
  3894  001380  EFF8  F009         	goto	l2008
  3895  001384                     u1190:
  3896  001384  0E01               	movlw	1
  3897  001386  6E09               	movwf	___aldiv@counter^0,c
  3898  001388  EFCC  F009         	goto	l1994
  3899  00138C                     l1992:
  3900  00138C  90D8               	bcf	status,0,c
  3901  00138E  3605               	rlcf	___aldiv@divisor^0,f,c
  3902  001390  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  3903  001392  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  3904  001394  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  3905  001396  2A09               	incf	___aldiv@counter^0,f,c
  3906  001398                     l1994:
  3907  001398  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  3908  00139A  EFD1  F009         	goto	u1201
  3909  00139E  EFD3  F009         	goto	u1200
  3910  0013A2                     u1201:
  3911  0013A2  EFC6  F009         	goto	l1992
  3912  0013A6                     u1200:
  3913  0013A6                     l1996:
  3914  0013A6  90D8               	bcf	status,0,c
  3915  0013A8  360B               	rlcf	___aldiv@quotient^0,f,c
  3916  0013AA  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  3917  0013AC  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  3918  0013AE  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  3919  0013B0  5005               	movf	___aldiv@divisor^0,w,c
  3920  0013B2  5C01               	subwf	___aldiv@dividend^0,w,c
  3921  0013B4  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3922  0013B6  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  3923  0013B8  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3924  0013BA  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  3925  0013BC  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3926  0013BE  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  3927  0013C0  A0D8               	btfss	status,0,c
  3928  0013C2  EFE5  F009         	goto	u1211
  3929  0013C6  EFE7  F009         	goto	u1210
  3930  0013CA                     u1211:
  3931  0013CA  EFF0  F009         	goto	l2004
  3932  0013CE                     u1210:
  3933  0013CE  5005               	movf	___aldiv@divisor^0,w,c
  3934  0013D0  5E01               	subwf	___aldiv@dividend^0,f,c
  3935  0013D2  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3936  0013D4  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  3937  0013D6  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3938  0013D8  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  3939  0013DA  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3940  0013DC  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  3941  0013DE  800B               	bsf	___aldiv@quotient^0,0,c
  3942  0013E0                     l2004:
  3943  0013E0  90D8               	bcf	status,0,c
  3944  0013E2  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  3945  0013E4  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  3946  0013E6  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  3947  0013E8  3205               	rrcf	___aldiv@divisor^0,f,c
  3948  0013EA  2E09               	decfsz	___aldiv@counter^0,f,c
  3949  0013EC  EFD3  F009         	goto	l1996
  3950  0013F0                     l2008:
  3951  0013F0  500A               	movf	___aldiv@sign^0,w,c
  3952  0013F2  B4D8               	btfsc	status,2,c
  3953  0013F4  EFFE  F009         	goto	u1221
  3954  0013F8  EF00  F00A         	goto	u1220
  3955  0013FC                     u1221:
  3956  0013FC  EF08  F00A         	goto	l2012
  3957  001400                     u1220:
  3958  001400  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  3959  001402  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  3960  001404  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  3961  001406  6C0B               	negf	___aldiv@quotient^0,c
  3962  001408  0E00               	movlw	0
  3963  00140A  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  3964  00140C  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  3965  00140E  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  3966  001410                     l2012:
  3967  001410  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3968  001414  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3969  001418  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3970  00141C  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3971  001420  0012               	return		;funcret
  3972  001422                     __end_of___aldiv:
  3973                           	callstack 0
  3974                           
  3975 ;; *************** function _TMR1_stop *****************
  3976 ;; Defined at:
  3977 ;;		line 26 in file "timer1_lib.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3991 ;;      Params:         0       0       0       0       0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; Hardware stack levels required when called: 1
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_main
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text25
  4006  001A5E                     __ptext25:
  4007                           	callstack 0
  4008  001A5E                     _TMR1_stop:
  4009                           	callstack 29
  4010  001A5E                     
  4011                           ;timer1_lib.c: 27:     T1CONbits.TMR1ON = 0;
  4012  001A5E  90CD               	bcf	205,0,c	;volatile
  4013  001A60                     
  4014                           ;timer1_lib.c: 28:     TMR1H = 0;
  4015  001A60  0E00               	movlw	0
  4016  001A62  6ECF               	movwf	207,c	;volatile
  4017                           
  4018                           ;timer1_lib.c: 29:     TMR1L = 0;
  4019  001A64  0E00               	movlw	0
  4020  001A66  6ECE               	movwf	206,c	;volatile
  4021  001A68  0012               	return		;funcret
  4022  001A6A                     __end_of_TMR1_stop:
  4023                           	callstack 0
  4024                           
  4025 ;; *************** function _TMR1_set *****************
  4026 ;; Defined at:
  4027 ;;		line 15 in file "timer1_lib.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4041 ;;      Params:         0       0       0       0       0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4044 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4045 ;;Total ram usage:        0 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; Hardware stack levels required when called: 1
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_main
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text26
  4056  001A6A                     __ptext26:
  4057                           	callstack 0
  4058  001A6A                     _TMR1_set:
  4059                           	callstack 29
  4060  001A6A                     
  4061                           ;timer1_lib.c: 16:     TMR1H = 0;
  4062  001A6A  0E00               	movlw	0
  4063  001A6C  6ECF               	movwf	207,c	;volatile
  4064                           
  4065                           ;timer1_lib.c: 17:     TMR1L = 0;
  4066  001A6E  0E00               	movlw	0
  4067  001A70  6ECE               	movwf	206,c	;volatile
  4068  001A72                     
  4069                           ;timer1_lib.c: 18:     T1CONbits.TMR1ON = 1;
  4070  001A72  80CD               	bsf	205,0,c	;volatile
  4071  001A74  0012               	return		;funcret
  4072  001A76                     __end_of_TMR1_set:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _TMR1_int_init *****************
  4076 ;; Defined at:
  4077 ;;		line 32 in file "timer1_lib.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		None
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4091 ;;      Params:         0       0       0       0       0       0       0       0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4095 ;;Total ram usage:        0 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; Hardware stack levels required when called: 1
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_main
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text27
  4106  001A76                     __ptext27:
  4107                           	callstack 0
  4108  001A76                     _TMR1_int_init:
  4109                           	callstack 29
  4110  001A76                     
  4111                           ;timer1_lib.c: 33:     INTCONbits.GIEH=1;
  4112  001A76  8EF2               	bsf	242,7,c	;volatile
  4113                           
  4114                           ;timer1_lib.c: 34:     INTCONbits.GIEL=1;
  4115  001A78  8CF2               	bsf	242,6,c	;volatile
  4116                           
  4117                           ;timer1_lib.c: 35:     RCONbits.IPEN=0;
  4118  001A7A  9ED0               	bcf	208,7,c	;volatile
  4119                           
  4120                           ;timer1_lib.c: 37:     PIE1bits.TMR1IE = 1;
  4121  001A7C  809D               	bsf	157,0,c	;volatile
  4122                           
  4123                           ;timer1_lib.c: 38:     PIR1bits.TMR1IF = 0;
  4124  001A7E  909E               	bcf	158,0,c	;volatile
  4125  001A80  0012               	return		;funcret
  4126  001A82                     __end_of_TMR1_int_init:
  4127                           	callstack 0
  4128                           
  4129 ;; *************** function _TMR1_int_enable *****************
  4130 ;; Defined at:
  4131 ;;		line 41 in file "timer1_lib.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		None
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used: 1
  4151 ;; Hardware stack levels required when called: 1
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text28
  4160  001A8C                     __ptext28:
  4161                           	callstack 0
  4162  001A8C                     _TMR1_int_enable:
  4163                           	callstack 29
  4164  001A8C                     
  4165                           ;timer1_lib.c: 42:     INTCONbits.GIE=1;
  4166  001A8C  8EF2               	bsf	242,7,c	;volatile
  4167  001A8E  0012               	return		;funcret
  4168  001A90                     __end_of_TMR1_int_enable:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function _TMR1_int_disable *****************
  4172 ;; Defined at:
  4173 ;;		line 45 in file "timer1_lib.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		None
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4190 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4191 ;;Total ram usage:        0 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 1
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_main
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text29
  4202  001A90                     __ptext29:
  4203                           	callstack 0
  4204  001A90                     _TMR1_int_disable:
  4205                           	callstack 29
  4206  001A90                     
  4207                           ;timer1_lib.c: 46:     INTCONbits.GIE=0;
  4208  001A90  9EF2               	bcf	242,7,c	;volatile
  4209  001A92  0012               	return		;funcret
  4210  001A94                     __end_of_TMR1_int_disable:
  4211                           	callstack 0
  4212                           
  4213 ;; *************** function _TMR1_init *****************
  4214 ;; Defined at:
  4215 ;;		line 5 in file "timer1_lib.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;		None
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;		None
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      void 
  4222 ;; Registers used:
  4223 ;;		wreg, status,2
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4229 ;;      Params:         0       0       0       0       0       0       0       0       0
  4230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4232 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4233 ;;Total ram usage:        0 bytes
  4234 ;; Hardware stack levels used: 1
  4235 ;; Hardware stack levels required when called: 1
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_main
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text30
  4244  001A34                     __ptext30:
  4245                           	callstack 0
  4246  001A34                     _TMR1_init:
  4247                           	callstack 29
  4248  001A34                     
  4249                           ;timer1_lib.c: 6:     T1CONbits.RD16 = 1;
  4250  001A34  8ECD               	bsf	205,7,c	;volatile
  4251                           
  4252                           ;timer1_lib.c: 7:     T1CONbits.T1RUN = 1;
  4253  001A36  8CCD               	bsf	205,6,c	;volatile
  4254  001A38                     
  4255                           ;timer1_lib.c: 8:     T1CONbits.T1CKPS = 0b11;
  4256  001A38  0E30               	movlw	48
  4257  001A3A  12CD               	iorwf	205,f,c	;volatile
  4258  001A3C                     
  4259                           ;timer1_lib.c: 9:     T1CONbits.T1OSCEN = 1;
  4260  001A3C  86CD               	bsf	205,3,c	;volatile
  4261  001A3E                     
  4262                           ;timer1_lib.c: 11:     T1CONbits.TMR1CS = 0;
  4263  001A3E  92CD               	bcf	205,1,c	;volatile
  4264  001A40                     
  4265                           ;timer1_lib.c: 12:     T1CONbits.TMR1ON = 0;
  4266  001A40  90CD               	bcf	205,0,c	;volatile
  4267  001A42  0012               	return		;funcret
  4268  001A44                     __end_of_TMR1_init:
  4269                           	callstack 0
  4270                           
  4271 ;; *************** function _TMR0_reset *****************
  4272 ;; Defined at:
  4273 ;;		line 20 in file "timer0_lib.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4287 ;;      Params:         0       0       0       0       0       0       0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4290 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4291 ;;Total ram usage:        0 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; Hardware stack levels required when called: 1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text31
  4302  001A82                     __ptext31:
  4303                           	callstack 0
  4304  001A82                     _TMR0_reset:
  4305                           	callstack 29
  4306  001A82                     
  4307                           ;timer0_lib.c: 21:     TMR0H = 0;
  4308  001A82  0E00               	movlw	0
  4309  001A84  6ED7               	movwf	215,c	;volatile
  4310                           
  4311                           ;timer0_lib.c: 22:     TMR0L = 0;
  4312  001A86  0E00               	movlw	0
  4313  001A88  6ED6               	movwf	214,c	;volatile
  4314  001A8A  0012               	return		;funcret
  4315  001A8C                     __end_of_TMR0_reset:
  4316                           	callstack 0
  4317                           
  4318 ;; *************** function _TMR0_read *****************
  4319 ;; Defined at:
  4320 ;;		line 15 in file "timer0_lib.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  2    0[COMRAM] unsigned short 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4334 ;;      Params:         2       0       0       0       0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4336 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4337 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4338 ;;Total ram usage:        4 bytes
  4339 ;; Hardware stack levels used: 1
  4340 ;; Hardware stack levels required when called: 1
  4341 ;; This function calls:
  4342 ;;		Nothing
  4343 ;; This function is called by:
  4344 ;;		_main
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text32
  4349  0019F2                     __ptext32:
  4350                           	callstack 0
  4351  0019F2                     _TMR0_read:
  4352                           	callstack 29
  4353  0019F2                     
  4354                           ;timer0_lib.c: 16:     contador = (TMR0L | ((uint16_t)TMR0H << 8));
  4355  0019F2  50D7               	movf	215,w,c	;volatile
  4356  0019F4  6E03               	movwf	??_TMR0_read^0,c
  4357  0019F6  50D6               	movf	214,w,c	;volatile
  4358  0019F8  0100               	movlb	0	; () banked
  4359  0019FA  6F68               	movwf	_contador& (0+255),b
  4360  0019FC  C003  F069         	movff	??_TMR0_read,_contador+1
  4361  001A00                     
  4362                           ; BSR set to: 0
  4363                           ;timer0_lib.c: 17:     return contador;
  4364  001A00  C068  F001         	movff	_contador,?_TMR0_read
  4365  001A04  C069  F002         	movff	_contador+1,?_TMR0_read+1
  4366  001A08                     
  4367                           ; BSR set to: 0
  4368  001A08  0012               	return		;funcret
  4369  001A0A                     __end_of_TMR0_read:
  4370                           	callstack 0
  4371                           
  4372 ;; *************** function _TMR0_init *****************
  4373 ;; Defined at:
  4374 ;;		line 4 in file "timer0_lib.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text33
  4403  001A20                     __ptext33:
  4404                           	callstack 0
  4405  001A20                     _TMR0_init:
  4406                           	callstack 29
  4407  001A20                     
  4408                           ;timer0_lib.c: 5:     T0CONbits.TMR0ON = 0;
  4409  001A20  9ED5               	bcf	213,7,c	;volatile
  4410                           
  4411                           ;timer0_lib.c: 6:     T0CONbits.T08BIT = 0;
  4412  001A22  9CD5               	bcf	213,6,c	;volatile
  4413                           
  4414                           ;timer0_lib.c: 7:     T0CONbits.T0CS = 1;
  4415  001A24  8AD5               	bsf	213,5,c	;volatile
  4416                           
  4417                           ;timer0_lib.c: 8:     T0CONbits.T0SE = 0;
  4418  001A26  98D5               	bcf	213,4,c	;volatile
  4419                           
  4420                           ;timer0_lib.c: 9:     T0CONbits.PSA = 1;
  4421  001A28  86D5               	bsf	213,3,c	;volatile
  4422  001A2A                     
  4423                           ;timer0_lib.c: 11:     TMR0H = 0;
  4424  001A2A  0E00               	movlw	0
  4425  001A2C  6ED7               	movwf	215,c	;volatile
  4426                           
  4427                           ;timer0_lib.c: 12:     TMR0L = 0;
  4428  001A2E  0E00               	movlw	0
  4429  001A30  6ED6               	movwf	214,c	;volatile
  4430  001A32  0012               	return		;funcret
  4431  001A34                     __end_of_TMR0_init:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _TMR0_enable *****************
  4435 ;; Defined at:
  4436 ;;		line 25 in file "timer0_lib.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		None
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4453 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4454 ;;Total ram usage:        0 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_main
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text34
  4465  001A94                     __ptext34:
  4466                           	callstack 0
  4467  001A94                     _TMR0_enable:
  4468                           	callstack 29
  4469  001A94                     
  4470                           ;timer0_lib.c: 26:     T0CONbits.TMR0ON = 1;
  4471  001A94  8ED5               	bsf	213,7,c	;volatile
  4472  001A96  0012               	return		;funcret
  4473  001A98                     __end_of_TMR0_enable:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function _TMR0_disable *****************
  4477 ;; Defined at:
  4478 ;;		line 29 in file "timer0_lib.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		None
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used: 1
  4498 ;; Hardware stack levels required when called: 1
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_main
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text35
  4507  001A98                     __ptext35:
  4508                           	callstack 0
  4509  001A98                     _TMR0_disable:
  4510                           	callstack 29
  4511  001A98                     
  4512                           ;timer0_lib.c: 30:     T0CONbits.TMR0ON = 0;
  4513  001A98  9ED5               	bcf	213,7,c	;volatile
  4514  001A9A  0012               	return		;funcret
  4515  001A9C                     __end_of_TMR0_disable:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function _ADC_read *****************
  4519 ;; Defined at:
  4520 ;;		line 24 in file "adc_lib.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  canal           1    wreg     unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  canal           1    3[COMRAM] unsigned char 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  2    0[COMRAM] unsigned short 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4534 ;;      Params:         2       0       0       0       0       0       0       0       0
  4535 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4536 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4537 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4538 ;;Total ram usage:        4 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 1
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_main
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text36
  4549  00190C                     __ptext36:
  4550                           	callstack 0
  4551  00190C                     _ADC_read:
  4552                           	callstack 29
  4553                           
  4554                           ;incstack = 0
  4555                           ;ADC_read@canal stored from wreg
  4556  00190C  6E04               	movwf	ADC_read@canal^0,c
  4557  00190E                     
  4558                           ;adc_lib.c: 25:     ADCON0 = 0;
  4559  00190E  0E00               	movlw	0
  4560  001910  6EC2               	movwf	194,c	;volatile
  4561  001912                     
  4562                           ;adc_lib.c: 26:     ADCON0bits.CHS = canal;
  4563  001912  C004  F003         	movff	ADC_read@canal,??_ADC_read
  4564  001916  4603               	rlncf	??_ADC_read^0,f,c
  4565  001918  4603               	rlncf	??_ADC_read^0,f,c
  4566  00191A  50C2               	movf	194,w,c	;volatile
  4567  00191C  1803               	xorwf	??_ADC_read^0,w,c
  4568  00191E  0BC3               	andlw	-61
  4569  001920  1803               	xorwf	??_ADC_read^0,w,c
  4570  001922  6EC2               	movwf	194,c	;volatile
  4571  001924                     
  4572                           ;adc_lib.c: 27:     ADCON0bits.ADON = 1;
  4573  001924  80C2               	bsf	194,0,c	;volatile
  4574  001926                     
  4575                           ;adc_lib.c: 28:     ADCON0bits.GODONE = 1;
  4576  001926  82C2               	bsf	194,1,c	;volatile
  4577  001928                     l177:
  4578                           
  4579                           ;adc_lib.c: 29:     while(ADCON0bits.GODONE == 1)
  4580  001928  B2C2               	btfsc	194,1,c	;volatile
  4581  00192A  EF99  F00C         	goto	u1281
  4582  00192E  EF9B  F00C         	goto	u1280
  4583  001932                     u1281:
  4584  001932  EF94  F00C         	goto	l177
  4585  001936                     u1280:
  4586  001936                     
  4587                           ;adc_lib.c: 31:     ADCON0bits.ADON = 0;
  4588  001936  90C2               	bcf	194,0,c	;volatile
  4589                           
  4590                           ;adc_lib.c: 33:     return ADRES;
  4591  001938  CFC3 F001          	movff	4035,?_ADC_read	;volatile
  4592  00193C  CFC4 F002          	movff	4036,?_ADC_read+1	;volatile
  4593  001940  0012               	return		;funcret
  4594  001942                     __end_of_ADC_read:
  4595                           	callstack 0
  4596                           
  4597 ;; *************** function _ADC_init *****************
  4598 ;; Defined at:
  4599 ;;		line 15 in file "adc_lib.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4616 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; Hardware stack levels required when called: 1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_main
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text37
  4628  0019B4                     __ptext37:
  4629                           	callstack 0
  4630  0019B4                     _ADC_init:
  4631                           	callstack 29
  4632  0019B4                     
  4633                           ;adc_lib.c: 16:     ADCON1bits.VCFG = 0b00;
  4634  0019B4  0ECF               	movlw	-49
  4635  0019B6  16C1               	andwf	193,f,c	;volatile
  4636                           
  4637                           ;adc_lib.c: 17:     ADCON1bits.PCFG = 0b1011;
  4638  0019B8  50C1               	movf	193,w,c	;volatile
  4639  0019BA  0BF0               	andlw	-16
  4640  0019BC  090B               	iorlw	11
  4641  0019BE  6EC1               	movwf	193,c	;volatile
  4642                           
  4643                           ;adc_lib.c: 18:     ADCON0 = 0;
  4644  0019C0  0E00               	movlw	0
  4645  0019C2  6EC2               	movwf	194,c	;volatile
  4646                           
  4647                           ;adc_lib.c: 19:     ADCON2bits.ACQT = 0b010;
  4648  0019C4  50C0               	movf	192,w,c	;volatile
  4649  0019C6  0BC7               	andlw	-57
  4650  0019C8  0910               	iorlw	16
  4651  0019CA  6EC0               	movwf	192,c	;volatile
  4652                           
  4653                           ;adc_lib.c: 20:     ADCON2bits.ADCS = 0b001;
  4654  0019CC  50C0               	movf	192,w,c	;volatile
  4655  0019CE  0BF8               	andlw	-8
  4656  0019D0  0901               	iorlw	1
  4657  0019D2  6EC0               	movwf	192,c	;volatile
  4658  0019D4                     
  4659                           ;adc_lib.c: 21:     ADCON2bits.ADFM = 1;
  4660  0019D4  8EC0               	bsf	192,7,c	;volatile
  4661  0019D6  0012               	return		;funcret
  4662  0019D8                     __end_of_ADC_init:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _ISR1 *****************
  4666 ;; Defined at:
  4667 ;;		line 130 in file "main.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4684 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; This function calls:
  4688 ;;		Nothing
  4689 ;; This function is called by:
  4690 ;;		Interrupt level 2
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	intcode
  4695  000008                     __pintcode:
  4696                           	callstack 0
  4697  000008                     _ISR1:
  4698                           	callstack 22
  4699                           
  4700                           ;incstack = 0
  4701  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4702  00000A  ED22  F00D         	call	int_func,f	;refresh shadow registers
  4703                           
  4704                           	psect	intcode_body
  4705  001A44                     __pintcode_body:
  4706                           	callstack 22
  4707  001A44                     int_func:
  4708                           	callstack 22
  4709  001A44  0006               	pop		; remove dummy address from shadow register refresh
  4710  001A46                     
  4711                           ;main.c: 131:     INT_overflow = 1;
  4712  001A46  0E01               	movlw	1
  4713  001A48  0100               	movlb	0	; () banked
  4714  001A4A  6F7D               	movwf	_INT_overflow& (0+255),b
  4715  001A4C                     
  4716                           ; BSR set to: 0
  4717                           ;main.c: 132:     PIR1bits.TMR1IF = 0;
  4718  001A4C  909E               	bcf	158,0,c	;volatile
  4719  001A4E                     
  4720                           ; BSR set to: 0
  4721  001A4E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4722  001A50  0011               	retfie		f
  4723  001A52                     __end_of_ISR1:
  4724                           	callstack 0
  4725                           
  4726                           	psect	rparam
  4727  0000                     
  4728                           	psect	temp
  4729  00005F                     btemp:
  4730                           	callstack 0
  4731  00005F                     	ds	1
  4732  0000                     int$flags	set	btemp
  4733  0000                     wtemp8	set	btemp+1
  4734  0000                     ttemp5	set	btemp+1
  4735  0000                     ttemp6	set	btemp+4
  4736  0000                     ttemp7	set	btemp+8
  4737                           
  4738                           	psect	idloc
  4739                           
  4740                           ;Config register IDLOC0 @ 0x200000
  4741                           ;	unspecified, using default values
  4742  200000                     	org	2097152
  4743  200000  FF                 	db	255
  4744                           
  4745                           ;Config register IDLOC1 @ 0x200001
  4746                           ;	unspecified, using default values
  4747  200001                     	org	2097153
  4748  200001  FF                 	db	255
  4749                           
  4750                           ;Config register IDLOC2 @ 0x200002
  4751                           ;	unspecified, using default values
  4752  200002                     	org	2097154
  4753  200002  FF                 	db	255
  4754                           
  4755                           ;Config register IDLOC3 @ 0x200003
  4756                           ;	unspecified, using default values
  4757  200003                     	org	2097155
  4758  200003  FF                 	db	255
  4759                           
  4760                           ;Config register IDLOC4 @ 0x200004
  4761                           ;	unspecified, using default values
  4762  200004                     	org	2097156
  4763  200004  FF                 	db	255
  4764                           
  4765                           ;Config register IDLOC5 @ 0x200005
  4766                           ;	unspecified, using default values
  4767  200005                     	org	2097157
  4768  200005  FF                 	db	255
  4769                           
  4770                           ;Config register IDLOC6 @ 0x200006
  4771                           ;	unspecified, using default values
  4772  200006                     	org	2097158
  4773  200006  FF                 	db	255
  4774                           
  4775                           ;Config register IDLOC7 @ 0x200007
  4776                           ;	unspecified, using default values
  4777  200007                     	org	2097159
  4778  200007  FF                 	db	255
  4779                           
  4780                           	psect	config
  4781                           
  4782                           ;Config register CONFIG1L @ 0x300000
  4783                           ;	PLL Prescaler Selection bits
  4784                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4785                           ;	System Clock Postscaler Selection bits
  4786                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4787                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4788                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4789  300000                     	org	3145728
  4790  300000  00                 	db	0
  4791                           
  4792                           ;Config register CONFIG1H @ 0x300001
  4793                           ;	Oscillator Selection bits
  4794                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
  4795                           ;	Fail-Safe Clock Monitor Enable bit
  4796                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4797                           ;	Internal/External Oscillator Switchover bit
  4798                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4799  300001                     	org	3145729
  4800  300001  0B                 	db	11
  4801                           
  4802                           ;Config register CONFIG2L @ 0x300002
  4803                           ;	Power-up Timer Enable bit
  4804                           ;	PWRT = ON, PWRT enabled
  4805                           ;	Brown-out Reset Enable bits
  4806                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4807                           ;	Brown-out Reset Voltage bits
  4808                           ;	BORV = 3, Minimum setting 2.05V
  4809                           ;	USB Voltage Regulator Enable bit
  4810                           ;	VREGEN = OFF, USB voltage regulator disabled
  4811  300002                     	org	3145730
  4812  300002  1E                 	db	30
  4813                           
  4814                           ;Config register CONFIG2H @ 0x300003
  4815                           ;	Watchdog Timer Enable bit
  4816                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4817                           ;	Watchdog Timer Postscale Select bits
  4818                           ;	WDTPS = 32768, 1:32768
  4819  300003                     	org	3145731
  4820  300003  1E                 	db	30
  4821                           
  4822                           ; Padding undefined space
  4823  300004                     	org	3145732
  4824  300004  FF                 	db	255
  4825                           
  4826                           ;Config register CONFIG3H @ 0x300005
  4827                           ;	CCP2 MUX bit
  4828                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  4829                           ;	PORTB A/D Enable bit
  4830                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4831                           ;	Low-Power Timer 1 Oscillator Enable bit
  4832                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4833                           ;	MCLR Pin Enable bit
  4834                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4835  300005                     	org	3145733
  4836  300005  00                 	db	0
  4837                           
  4838                           ;Config register CONFIG4L @ 0x300006
  4839                           ;	Stack Full/Underflow Reset Enable bit
  4840                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4841                           ;	Single-Supply ICSP Enable bit
  4842                           ;	LVP = OFF, Single-Supply ICSP disabled
  4843                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4844                           ;	ICPRT = OFF, ICPORT disabled
  4845                           ;	Extended Instruction Set Enable bit
  4846                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4847                           ;	Background Debugger Enable bit
  4848                           ;	DEBUG = 0x1, unprogrammed default
  4849  300006                     	org	3145734
  4850  300006  81                 	db	129
  4851                           
  4852                           ; Padding undefined space
  4853  300007                     	org	3145735
  4854  300007  FF                 	db	255
  4855                           
  4856                           ;Config register CONFIG5L @ 0x300008
  4857                           ;	Code Protection bit
  4858                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4859                           ;	Code Protection bit
  4860                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4861                           ;	Code Protection bit
  4862                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4863                           ;	Code Protection bit
  4864                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4865  300008                     	org	3145736
  4866  300008  0F                 	db	15
  4867                           
  4868                           ;Config register CONFIG5H @ 0x300009
  4869                           ;	Boot Block Code Protection bit
  4870                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4871                           ;	Data EEPROM Code Protection bit
  4872                           ;	CPD = OFF, Data EEPROM is not code-protected
  4873  300009                     	org	3145737
  4874  300009  C0                 	db	192
  4875                           
  4876                           ;Config register CONFIG6L @ 0x30000A
  4877                           ;	Write Protection bit
  4878                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4879                           ;	Write Protection bit
  4880                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4881                           ;	Write Protection bit
  4882                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4883                           ;	Write Protection bit
  4884                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4885  30000A                     	org	3145738
  4886  30000A  0F                 	db	15
  4887                           
  4888                           ;Config register CONFIG6H @ 0x30000B
  4889                           ;	Configuration Register Write Protection bit
  4890                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4891                           ;	Boot Block Write Protection bit
  4892                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4893                           ;	Data EEPROM Write Protection bit
  4894                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4895  30000B                     	org	3145739
  4896  30000B  E0                 	db	224
  4897                           
  4898                           ;Config register CONFIG7L @ 0x30000C
  4899                           ;	Table Read Protection bit
  4900                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4901                           ;	Table Read Protection bit
  4902                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4903                           ;	Table Read Protection bit
  4904                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4905                           ;	Table Read Protection bit
  4906                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4907  30000C                     	org	3145740
  4908  30000C  0F                 	db	15
  4909                           
  4910                           ;Config register CONFIG7H @ 0x30000D
  4911                           ;	Boot Block Table Read Protection bit
  4912                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4913  30000D                     	org	3145741
  4914  30000D  40                 	db	64
  4915                           tosu	equ	0xFFF
  4916                           tosh	equ	0xFFE
  4917                           tosl	equ	0xFFD
  4918                           stkptr	equ	0xFFC
  4919                           pclatu	equ	0xFFB
  4920                           pclath	equ	0xFFA
  4921                           pcl	equ	0xFF9
  4922                           tblptru	equ	0xFF8
  4923                           tblptrh	equ	0xFF7
  4924                           tblptrl	equ	0xFF6
  4925                           tablat	equ	0xFF5
  4926                           prodh	equ	0xFF4
  4927                           prodl	equ	0xFF3
  4928                           indf0	equ	0xFEF
  4929                           postinc0	equ	0xFEE
  4930                           postdec0	equ	0xFED
  4931                           preinc0	equ	0xFEC
  4932                           plusw0	equ	0xFEB
  4933                           fsr0h	equ	0xFEA
  4934                           fsr0l	equ	0xFE9
  4935                           wreg	equ	0xFE8
  4936                           indf1	equ	0xFE7
  4937                           postinc1	equ	0xFE6
  4938                           postdec1	equ	0xFE5
  4939                           preinc1	equ	0xFE4
  4940                           plusw1	equ	0xFE3
  4941                           fsr1h	equ	0xFE2
  4942                           fsr1l	equ	0xFE1
  4943                           bsr	equ	0xFE0
  4944                           indf2	equ	0xFDF
  4945                           postinc2	equ	0xFDE
  4946                           postdec2	equ	0xFDD
  4947                           preinc2	equ	0xFDC
  4948                           plusw2	equ	0xFDB
  4949                           fsr2h	equ	0xFDA
  4950                           fsr2l	equ	0xFD9
  4951                           status	equ	0xFD8

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160      4      78
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1561$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1561$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> string_pwm_motor(BANK0[5]), string_pwm_led(BANK0[5]), 

    serial_read@s_pwm_motor	PTR unsigned char  size(2) Largest target is 5
		 -> string_pwm_motor(BANK0[5]), 

    serial_read@s_pwm_led	PTR unsigned char  size(2) Largest target is 5
		 -> string_pwm_led(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _atoi->_isspace
    _USART_init->___aldiv

Critical Paths under _ISR1 in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _ISR1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR1 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR1 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR1 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR1 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR1 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR1 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8502
                                              2 BANK0      2     2      0
                           _ADC_init
                           _ADC_read
                       _TMR0_disable
                        _TMR0_enable
                          _TMR0_init
                          _TMR0_read
                         _TMR0_reset
                          _TMR1_init
                   _TMR1_int_disable
                    _TMR1_int_enable
                      _TMR1_int_init
                           _TMR1_set
                          _TMR1_stop
                         _USART_init
                               _atoi
                        _intosc_init
                             _printf
                          _pwm1_send
                          _pwm2_send
                            _pwm_set
                        _serial_read
 ---------------------------------------------------------------------------------
 (1) _serial_read                                          6     2      4     196
                                              0 COMRAM     6     2      4
                              _getch
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm_set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm2_send                                            4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _pwm1_send                                            4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6103
                                             88 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5973
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5619
                                             64 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4270
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2621
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1191
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     790
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _intosc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                10     8      2    1172
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           8     4      4     725
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR1_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_int_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_int_enable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_int_disable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_reset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_read                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
   _TMR0_disable
   _TMR0_enable
   _TMR0_init
   _TMR0_read
   _TMR0_reset
   _TMR1_init
   _TMR1_int_disable
   _TMR1_int_enable
   _TMR1_int_init
   _TMR1_set
   _TMR1_stop
   _USART_init
     ___aldiv
   _atoi
     ___wmul
     _isdigit
     _isspace
   _intosc_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _pwm1_send
   _pwm2_send
   _pwm_set
   _serial_read
     _getch

 _ISR1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      4E       5       48.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRl          20      0       0      31        0.0%
BITBIGSFRhhhhhh     1A      0       0      21        0.0%
BITBIGSFRhlh         F      0       0      30        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRhhhll       C      0       0      28        0.0%
BITBIGSFRhhhhll      A      0       0      27        0.0%
BITBIGSFRhhlh        8      0       0      29        0.0%
BITBIGSFRhhhhhl      5      0       0      24        0.0%
BITBIGSFRhhhhhl      2      0       0      23        0.0%
BITBIGSFRhhhhll      1      0       0      26        0.0%
BITBIGSFRhhhhlh      1      0       0      25        0.0%
BITBIGSFRhhhhhh      1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AC      32        0.0%
DATA                 0      0      AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jun 24 15:19:42 2023

         ??_TMR1_int_init 0001                         _i 007F                         _j 007E  
                      _ch 007B       ___wmul@multiplicand 0003                       l202 1A8A  
                     l116 159A                       l205 1A96                       l109 1582  
                     l230 1A74                       l142 16A0                       l151 1990  
                     l208 1A9A                       l233 1A68                       l145 1A0C  
                     l153 199E                       l242 1A92                       l227 1A42  
                     l403 11C4                       l155 19B2                       l180 1940  
                     l236 1A80                       l148 1A1E                       l174 19D6  
                     l270 17DC                       l239 1A8E                       l177 1928  
                     l185 1A5C                       l273 1798                       l179 1936  
                     l355 1420                       l267 189C                       l196 1A32  
                     l276 198E                       l390 1060                       l199 1A08  
       ??_TMR1_int_enable 0001                       l972 1314                       l975 18D4  
                     l983 1754                       l969 130C                       l993 1968  
                     _PR2 000FCB                       u710 1A1A                       u711 1A16  
                     u720 15AE                       u801 0F48                       u721 15AA  
                     u810 0F6C                       u730 15C0                       u811 0F68  
                     u731 15BC                       u820 0F96                       u900 1184  
                     u740 15E8                       u821 0F92                       u901 1180  
                     u741 15E4                       u830 0FD6                       u750 161E  
                     u910 1432                       u831 0FD2                       u751 161A  
                     u911 142E                       u840 1020                       u760 1820  
                     u920 1454                       u841 101C                       u761 181C  
                     u921 1450                       u850 1074                       u770 18FE  
                     u930 14AA                       u851 1070                       u771 18FA  
                     u931 14A6                       u780 0EEC                       u860 10A6  
                     u940 14BA                       u781 0EE8                       u861 10A2  
                     u941 14B6                       u790 0F1E                       u870 10E4  
                     u950 183C                       u791 0F1A                       u871 10E0  
                     u951 1838                       u880 110E                       u960 083A  
                     u881 110A                       u961 0834                       u890 113C  
                     u970 083C                       u891 1138                       u980 0852  
                     u981 084E                       u990 0882                       u991 087E  
                     _abs 1822                       _pad 1422                       _luz 0070  
                     wreg 000FE8         ?_TMR1_int_disable 0001                      l1020 1468  
                    l1023 14AA                      l1031 08AA                      l2000 13CE  
                    l1025 14E6                      l1033 08B2                      l2010 1400  
                    l2002 13DE                      l1051 0AEA                      ?_abs 0013  
                    l2100 1A94                      l2012 1410                      l2004 13E0  
                    l2020 171C                      l2102 1A82                      l2110 1A60  
                    l2006 13EA                      l2022 174A                      l2112 19F2  
                    l2120 1A90                      l2104 1A6A                      l2008 13F0  
                    l2024 174E                      l2016 1704                      l2200 12DE  
                    l2040 1A52                      l1072 1860                      l1064 16FA  
                    l2032 16A2                      l1065 1702                      l2122 190E  
                    l2114 1A00                      l2106 1A72                      l2050 1694  
                    l2018 1708                      l2202 12F0                      l2042 1A56  
                    l1058 0ED8                      l2034 16AA                      l2130 1942  
                    l2210 1756                      l2124 1912                      l2108 1A5E  
                    l2060 169E                      l2052 1696                      l2044 1632  
                    l2028 189E                      l1084 1630                      l1092 1820  
                    l2036 16B8                      l2132 194C                      l2140 1502  
                    l2300 0D06                      l2220 0B34                      l2212 0AEC  
                    l1069 1858                      l2062 19B4                      l2126 1924  
                    l2118 1A98                      l2070 1A34                      l2054 1698  
                    l2046 1636                      l2038 16DE                      l2150 152E  
                    l2142 150A                      l2302 0D12                      l2230 0B5A  
                    l2222 0B38                      l2214 0AF0                      l2064 19D4  
                    l2128 1926                      l2072 1A38                      l2080 1A76  
                    l2056 169A                      l2048 1692                      l2208 179A  
                    l2152 153E                      l2160 1558                      l2144 1512  
                    l2136 14E8                      l2240 0B96                      l2232 0B5E  
                    l2224 0B3A                      l2216 0B08                      l2066 1A20  
                    l2074 1A3C                      l2058 169C                      l1098 190A  
                    l2090 1878                      l2082 1862                      l2154 1544  
                    l2146 1524                      l2162 1582                      l2138 14F0  
                    l2242 0B9A                      l2234 0B62                      l2226 0B3E  
                    l2218 0B1C                      l2068 1A2A                      l2076 1A3E  
                    l2092 1886                      l2084 186A                      l2164 1592  
                    l2148 1526                      l2260 0BC6                      l2252 0BA8  
                    l2244 0B9E                      l2236 0B7A                      l2228 0B56  
                    l2078 1A40                      l2190 1240                      l2182 11DE  
                    l2094 1888                      l2086 186C                      l2270 0BEE  
                    l2262 0BCA                      l2254 0BAC                      l2246 0BA2  
                    l2238 0B7E                      l2192 1272                      l2184 11F8  
                    l2176 11C6                      l1800 1098                      l1712 1A0C  
                    l1720 15C0                      l2096 189A                      l2088 1876  
                    l2168 1598                      l2280 0C58                      l2272 0BFC  
                    l2264 0BDA                      l2256 0BBE                      l2098 1A8C  
                    l2186 1230                      l2178 11DA                      l1810 1100  
                    l1802 10A6                      l1714 1A1A                      l1722 15CA  
                    l1730 17DE                      l2290 0CAE                      l2282 0C74  
                    l2274 0C0A                      l2266 0BE6                      l2258 0BC2  
                    l2188 1238                      l1812 110E                      l1820 1174  
                    l1804 10C6                      l1724 15E8                      l1716 159C  
                    l1732 17EA                      l1740 18E2                      l1900 0A76  
                    l2356 156C                      l2284 0C7A                      l2276 0C18  
                    l2268 0BEA                      l2358 125C                      l2198 12AA  
                    l1750 0EDE                      l1822 1184                      l1814 113C  
                    l1806 10E4                      l1726 161E                      l1718 15AE  
                    l1734 17FC                      l1742 18E6                      l1830 1432  
                    l1910 0AB2                      l1902 0A86                      l2294 0CB4  
                    l2278 0C26                      l1760 0F3E                      l1752 0EEC  
                    l1824 11A4                      l1816 115C                      l1808 10EC  
                    l1736 1800                      l1744 18FE                      l1840 1488  
                    l1832 1446                      l1904 0A8C                      l1912 0AC2  
                    l1920 0D58                      l2296 0CBC                      l2288 0C8E  
                    l1770 0F88                      l1762 0F42                      l1754 0F0C  
                    l1818 116E                      l1850 1822                      l1738 18D6  
                    l1842 148C                      l1834 1454                      l1906 0A9E  
                    l1930 0DFE                      l1922 0D6A                      l2298 0CDE  
                    l1780 0FF8                      l1772 0F96                      l1764 0F4E  
                    l1756 0F10                      l1748 0EDA                      l1852 183C  
                    l1844 14BA                      l1836 1460                      l1828 1422  
                    l1908 0AAA                      l1860 0872                      l1940 0E7C  
                    l1924 0D6E                      l1916 0D26                      l1782 100A  
                    l1774 0FA8                      l1766 0F6C                      l1758 0F1E  
                    l1846 14CE                      l1838 1474                      l1870 08CC  
                    l1862 0882                      l1854 080A                      l1934 0E36  
                    l1926 0D92                      l1918 0D4A                      l1950 0EA2  
                    l1776 0FD6                      l1768 0F74                      l1784 1010  
                    l1792 1062                      l1880 08F6                      l1872 08DA  
                    l1864 0884                      l1856 082A                      l1952 0EC6  
                    l1936 0E5A                      l1944 0E88                      l1928 0DB6  
                    l1960 19AC                      l1786 1020                      l1778 0FF6  
                    l1794 1066                      l1890 0A02                      l1882 0978  
                    l1874 08E0                      l1866 089E                      l1858 0852  
                    l1946 0E96                      l1938 0E68                      l1962 19B0  
                    l1980 133C                      l1972 1316                      l1788 1040  
                    l1796 1074                      l1892 0A20                      l1884 097E  
                    l1876 08E8                      l1868 08BA                      l1990 1384  
                    l1982 134A                      l1974 131A                      l1966 196A  
                    l1798 1094                      l1894 0A3A                      l1886 0984  
                    l1878 08F0                      l1958 1990                      ?_pad 0012  
                    l1992 138C                      l1984 135A                      l1976 1328  
                    l1968 1986                      l1896 0A54                      l1888 09E8  
                    l1994 1398                      l1986 135E                      l1978 1338  
                    l1898 0A64                      l1996 13A6                      l1988 136E  
                    l1998 13B0                      STR_1 0801        ??_TMR1_int_disable 0001  
                    u1000 089E                      _CREN 007D5C                      u1001 089A  
                    u1010 08CC                      u1011 08C8                      u1100 0A9E  
                    u1020 08DA                      u1101 0A9A                      u1021 08D6  
                    u1030 0A02                      u1110 0D4A                      u1031 09FE  
                    u1111 0D46                      u1200 13A6                      u1040 0A20  
                    u1120 0D92                      u1201 13A2                      u1041 0A1C  
                    u1121 0D8E                      u1210 13CE                      u1050 0A3A  
                    u1130 0DB6                      u1211 13CA                      u1051 0A36  
                    u1131 0DB2                      u1220 1400                      u1060 0A54  
                    u1140 0E5A                      u1300 1524                      u1221 13FC  
                    u1061 0A50                      u1141 0E56                      u1301 1520  
                    u1230 171C                      u1070 0A64                      u1150 199E  
                    u1310 1592                      u1231 1718                      u1071 0A60  
                    u1151 199A                      u1311 158E                      u1240 174A  
                    u1320 11F8                      u1080 0A76                      u1160 19AC  
                    u1241 1746                      u1321 11F4                      u1081 0A72  
                    u1161 19A8                      u1170 1328                      u1250 18CE  
                    u1330 122C                      u1090 0A86                      u1171 1324  
                    u1251 18C8                      u1331 1228                      u1091 0A82  
                    u1180 134A                      u1260 18D0                      u1340 12DE  
                    u1181 1346                      u1341 12DA                      u1190 1384  
                    u1350 12F0                      u1270 16FA                      u1191 1380  
                    u1351 12EC                      u1271 16F6                      u1280 1936  
                    u1360 0BBE                      u1281 1932                      u1361 0BBA  
                    u1417 0AFC                      u1290 1502                      u1370 0BDA  
                    u1291 14FE                      u1371 0BD6                      u1427 0B28  
                    u1380 0C8A                      u1381 0C86                      u1437 0B4A  
                    u1390 0CDE                      u1391 0CDA                      u1447 0B6E  
                    u1457 0B8A                      _ISR1 0008                      _OERR 007D59  
                    _TMR2 000FCC                      abs@a 0013                      _acum 006E  
                    _dbuf 0080                      _atoi 11C6                      _main 0AEC  
                    _dtoa 080A                      _prec 0064                      _nout 0060  
                    pad@i 0019                      pad@p 0016                      fsr1h 000FE2  
                    fsr2h 000FDA                      indf2 000FDF                      fsr1l 000FE1  
                    pad@w 001B                      fsr2l 000FD9                      btemp 005F  
                    prodh 000FF4                      prodl 000FF3                      start 000E  
        __end_of_ADC_init 19D8          __end_of_ADC_read 1942              ___param_bank 000000  
           ADC_read@canal 0004                     ??_abs 0015                     ??_pad 0018  
                   ?_ISR1 0001           __end_of___aldiv 1422           __end_of___aodiv 1062  
                   ?_atoi 0008                     ?_main 0001                     ?_dtoa 001D  
         __end_of___aomod 11C6                     _ADRES 000FC3                     _LDR_0 0078  
                   _LDR_1 0076                     _LDR_2 0074                     i2l121 1A4E  
                   _LDR_3 0072                     _RCREG 000FAE              vfpfcnvrt@fmt 0043  
                   _TMR0H 000FD7                     _TMR1H 000FCF                     _TMR0L 000FD6  
                   _TMR1L 000FCE                     _SPBRG 000FAF                     _PORTA 000F80  
                   _PORTB 000F81                     _PORTC 000F82                     _TRISA 000F92  
                   _TXREG 000FAD                     _flags 0066          __end_of_TMR1_set 1A76  
                   _getch 1990                     _fputc 159C                     _fputs 17DE  
         __end_of_isdigit 18D6                     atoi@n 0010                     pad@fp 0012  
                   atoi@s 0008                     _width 0062                     _putch 1A0A  
                   dtoa@d 001F                     dtoa@i 003F                     dtoa@n 0037  
                   dtoa@p 0031                     dtoa@s 0035               ?_TMR0_reset 0001  
                   dtoa@w 0033           __end_of_isspace 1756                     tablat 000FF5  
         __end_of_pwm_set 189E                     ttemp5 0060                     ttemp6 0063  
                   ttemp7 0067                     status 000FD8                     wtemp8 0060  
            __end_of_ISR1 1A52               ?_USART_init 000F           __initialization 19D8  
            __end_of_atoi 1316              __end_of_main 0D26              __end_of_dtoa 0AEC  
            ?_intosc_init 0001                    ??_ISR1 0001                    ??_atoi 000A  
                  ??_main 00AC                    ??_dtoa 0027             __activetblptr 000002  
                  ?_getch 0001                    _ADCON0 000FC2                    ?_fputc 0002  
                  ?_fputs 000B                    _CCPR1L 000FBE                    _CCPR2L 000FBB  
                  ?_putch 0001                    i2l2304 1A46                    i2l2306 1A4C  
            ?_serial_read 0001              vfprintf@cfmt 0057                 ??___aldiv 0009  
               ??___aodiv 0011                 ??___aomod 0011                    ___wmul 196A  
       __end_of_TMR0_init 1A34         __end_of_TMR0_read 1A0A         __end_of_TMR1_init 1A44  
       __end_of_TMR1_stop 1A6A              ?_TMR0_enable 0001                    clear_0 19DE  
                  isa$std 000001                    _printf 1942                    pad@buf 0014  
                  dtoa@fp 001D                    _strlen 18D6                    fputc@c 0002  
                  fputs@c 000F                    fputs@i 0010                    fputs@s 000B  
               ??_isdigit 0003              __mediumconst 0000                 ??_isspace 0003  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
               ?_ADC_init 0001                 ?_ADC_read 0001          __end_of_vfprintf 1704  
               ??_pwm_set 0001    serial_read@s_pwm_motor 0003                __accesstop 0060  
 __end_of__initialization 19E4             ___rparam_used 000001              _change_array 007A  
         _TMR1_int_enable 1A8C            __pcstackCOMRAM 0001             __end_of_getch 19B4  
           __end_of_fputc 1632             __end_of_fputs 1822                 ?_TMR1_set 0001  
           __end_of_putch 1A20                ??_ADC_init 0001                ??_ADC_read 0003  
                 ??_getch 0001                   ??_fputc 0006                   ??_fputs 000F  
    serial_read@s_pwm_led 0001                   ??_putch 0001                __pbssBANK0 0060  
                 ?___wmul 0001                ??_TMR1_set 0001     __end_of_TMR1_int_init 1A82  
                 ?_printf 0059                   ?_strlen 0001              ??_TMR0_reset 0001  
 __end_of_TMR1_int_enable 1A90                   __Hparam 0000                   __Lparam 0000  
            ??_USART_init 0013          _string_pwm_motor 00A0                   ___aldiv 1316  
                 ___aodiv 0EDA                   ___aomod 1062                 ?_vfprintf 0051  
            __psmallconst 0800                   __pcinit 19D8                   __ramtop 0800  
      __end_of_TMR0_reset 1A8C                   __ptext0 0AEC                   __ptext1 14E8  
                 __ptext2 1990                   __ptext3 1862                   __ptext4 1756  
                 __ptext5 179A                   __ptext6 1942                   __ptext7 16A2  
                 __ptext8 0D26                   __ptext9 080A                 _T0CONbits 000FD5  
               _T1CONbits 000FCD                 _T2CONbits 000FCA                   _isdigit 189E  
           ?_TMR0_disable 0001          ___aldiv@dividend 0001                   _isspace 1704  
                 atoi@neg 000E                   _pwm_led 006C                   _pwm_set 1862  
      __end_of_USART_init 16A2            __pintcode_body 1A44      end_of_initialization 19E4  
       __end_of_pwm1_send 17DE         __end_of_pwm2_send 179A                   fputc@fp 0004  
           __Lmediumconst 0000                   int_func 1A44                   fputs@fp 000D  
       __end_of_vfpfcnvrt 0EDA                 _RCSTAbits 000FAB          ___aldiv@quotient 000B  
                 postdec2 000FDD                   postinc0 000FEE                   postinc1 000FE6  
                 postinc2 000FDE                ??_vfprintf 0057                   strlen@a 0003  
                 strlen@s 0001                 _TMR0_init 1A20                 _TMR0_read 19F2  
               _TMR1_init 1A34                 _TMR1_stop 1A5E            ??_TMR0_disable 0001  
               _TRISBbits 000F93                 _TRISCbits 000F94          ?_TMR1_int_enable 0001  
             _CCP1CONbits 000FBD               _CCP2CONbits 000FBA                 _TXSTAbits 000FAC  
        _TMR1_int_disable 1A90               vfpfcnvrt@ap 0045               vfpfcnvrt@fp 0041  
             vfpfcnvrt@ll 0049            __end_of___wmul 1990            USART_init@BAUD 000F  
              ?_TMR0_init 0001                ?_TMR0_read 0001                ?_TMR1_init 0001  
              ?_TMR1_stop 0001            __end_of_printf 196A            __end_of_strlen 190C  
     start_initialization 19D8               __end_of_abs 1862               __end_of_pad 14E8  
          _string_pwm_led 00A5               vfprintf@fmt 0053                  ??___wmul 0005  
                ??_printf 005F                  ??_strlen 0003             __pcstackBANK0 00AA  
        ___aodiv@dividend 0001      __end_of_TMR0_disable 1A9C                 _dtoa$1630 002F  
               __pintcode 0008                  ?___aldiv 0001                  ?___aodiv 0001  
                ?___aomod 0001          ___aodiv@quotient 0013             ??_intosc_init 0001  
             ??_TMR0_init 0001               ??_TMR0_read 0003               ??_TMR1_init 0001  
             ??_TMR1_stop 0001               __smallconst 0800                  ?_isdigit 0001  
               _indicador 007C                  ?_isspace 0001                  _ADC_init 19B4  
                _ADC_read 190C                  ?_pwm_set 0001           ___aldiv@divisor 0005  
         ___aldiv@counter 0009            ___wmul@product 0005                 _pwm1_send 179A  
                _PIE1bits 000F9D                 _pwm2_send 1756                  _PIR1bits 000F9E  
           ??_serial_read 0005                  _RCONbits 000FD0                  _TMR1_set 1A6A  
           ??_TMR0_enable 0001                 _vfpfcnvrt 0D26                _ADCON0bits 000FC2  
              _ADCON1bits 000FC1                _ADCON2bits 000FC0                 _pwm_motor 006A  
       ___wmul@multiplier 0001       __end_of_intosc_init 1A5E  __end_of_TMR1_int_disable 1A94  
            _isspace$1553 0007                ?_pwm1_send 0001                ?_pwm2_send 0001  
                __Hrparam 0000                vfprintf@ap 0055                  __Lrparam 0000  
              vfprintf@fp 0051              _INT_overflow 007D                ?_vfpfcnvrt 0041  
           _TMR1_int_init 1A76       __end_of_serial_read 159C           ___aodiv@divisor 0009  
         ___aodiv@counter 0011       __end_of_TMR0_enable 1A98                  __ptext10 1422  
                __ptext11 18D6                  __ptext20 1704                  __ptext12 17DE  
                __ptext21 189E                  __ptext13 159C                  __ptext30 1A34  
                __ptext22 196A                  __ptext14 1A0A                  __ptext31 1A82  
                __ptext23 1632                  __ptext15 1822                  __ptext32 19F2  
                __ptext24 1316                  __ptext16 1062                  __ptext33 1A20  
                __ptext25 1A5E                  __ptext17 0EDA                  __ptext34 1A94  
                __ptext26 1A6A                  __ptext18 1A52                  __ptext35 1A98  
                __ptext27 1A76                  __ptext19 11C6                  __ptext36 190C  
                __ptext28 1A8C                  __ptext37 19B4                  __ptext29 1A90  
                _contador 0068                  isa$xinst 000000                  int$flags 005F  
                _vfprintf 16A2               _intosc_init 1A52                 printf@fmt 0059  
          ?_TMR1_int_init 0001          ___aomod@dividend 0001                 putch@data 0001  
              _INTCONbits 000FF2              _TMR0_disable 1A98                  isdigit@c 0001  
                intlevel2 0000                  isspace@c 0001               ??_pwm1_send 0003  
             ??_pwm2_send 0003            pwm1_send@valor 0001                _OSCCONbits 000FD3  
             _serial_read 14E8                  printf@ap 00AA           ___aomod@divisor 0009  
             ??_vfpfcnvrt 0047           ___aomod@counter 0011               _TMR0_enable 1A94  
          pwm2_send@valor 0001              ___aldiv@sign 000A                _TMR0_reset 1A82  
            ___aodiv@sign 0012              ___aomod@sign 0012           _USART_init$1881 0013  
              _USART_init 1632  
